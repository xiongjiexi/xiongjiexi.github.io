(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{638:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" Linux")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#常用命令和快捷键"}},[t._v("常用命令和快捷键")]),a("ul",[a("li",[a("a",{attrs:{href:"#设定命令别名"}},[t._v("设定命令别名")])]),a("li",[a("a",{attrs:{href:"#ls命令"}},[t._v("ls命令")])]),a("li",[a("a",{attrs:{href:"#pwd-p"}},[t._v("pwd -P")])]),a("li",[a("a",{attrs:{href:"#终端文本移动操作快捷键"}},[t._v("终端文本移动操作快捷键")])]),a("li",[a("a",{attrs:{href:"#关机、重启"}},[t._v("关机、重启")])]),a("li",[a("a",{attrs:{href:"#kill命令"}},[t._v("kill命令")])]),a("li",[a("a",{attrs:{href:"#iconv"}},[t._v("iconv")])]),a("li",[a("a",{attrs:{href:"#sed"}},[t._v("sed")])]),a("li",[a("a",{attrs:{href:"#awk"}},[t._v("awk")])])])]),a("li",[a("a",{attrs:{href:"#常用操作"}},[t._v("常用操作")]),a("ul",[a("li",[a("a",{attrs:{href:"#添加path"}},[t._v("添加PATH")])])])]),a("li",[a("a",{attrs:{href:"#iostat命令"}},[t._v("iostat命令")]),a("ul",[a("li",[a("a",{attrs:{href:"#安装"}},[t._v("安装")])]),a("li",[a("a",{attrs:{href:"#常用命令"}},[t._v("常用命令")])]),a("li",[a("a",{attrs:{href:"#options"}},[t._v("Options")])]),a("li",[a("a",{attrs:{href:"#每隔两秒刷新一次-一共刷新3次。"}},[t._v("每隔两秒刷新一次，一共刷新3次。")])]),a("li",[a("a",{attrs:{href:"#指定监控设备-使用-x获取扩展参数"}},[t._v("指定监控设备，使用-x获取扩展参数")])]),a("li",[a("a",{attrs:{href:"#参考地址"}},[t._v("参考地址")])])])]),a("li",[a("a",{attrs:{href:"#linux中多个命令顺序执行"}},[t._v("linux中多个命令顺序执行")])]),a("li",[a("a",{attrs:{href:"#bin-bash和-bin-sh的区别"}},[t._v("#!/bin/bash和#!/bin/sh的区别")])]),a("li",[a("a",{attrs:{href:"#linux环境变量"}},[t._v("linux环境变量")])]),a("li",[a("a",{attrs:{href:"#用户和用户组"}},[t._v("用户和用户组")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"常用命令和快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令和快捷键"}},[t._v("#")]),t._v(" 常用命令和快捷键")]),t._v(" "),a("h3",{attrs:{id:"设定命令别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设定命令别名"}},[t._v("#")]),t._v(" 设定命令别名")]),t._v(" "),a("p",[t._v("有一些指令需要经常使用，可以将命令简写以便快速使用")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置指令别名")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("new_cmd")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'old_cmd'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看别名指代的原始指令")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" new_cmd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除别名")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("unalias")]),t._v(" new_cmd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有别名")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v("\n")])])]),a("p",[t._v("以上命令直接使用只是在单次会话中生效，要使其永久生效需要加入到.bashrc文件中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将别名配置加入到/etc/bashrc中，使其永久生效")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alias l='ls -l'\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/bashrc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使配置生效(raspberry pi不知道为什么仍然不生效)")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /etc/bashrc\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上面配置类似，但只使在当前用户生效")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alias l='ls -l'\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使配置生效")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.bashrc\n")])])]),a("h3",{attrs:{id:"ls命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ls命令"}},[t._v("#")]),t._v(" ls命令")]),t._v(" "),a("p",[t._v("列出目录下文件或文件夹")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “ll”是“ls -l”的别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “-S”按文件大小排序，最大的排在前；“-h”是human可行性，大小会以1k 1M 1G等效果显示。")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -lSh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “-r”倒序显示")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -lrSh\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “-t”按修改时间排序，最新的排在前")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -t\n")])])]),a("h3",{attrs:{id:"pwd-p"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pwd-p"}},[t._v("#")]),t._v(" pwd -P")]),t._v(" "),a("p",[t._v("查看软链接的真实路径")]),t._v(" "),a("h3",{attrs:{id:"终端文本移动操作快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#终端文本移动操作快捷键"}},[t._v("#")]),t._v(" 终端文本移动操作快捷键")]),t._v(" "),a("ul",[a("li",[t._v("平常一般按"),a("code",[t._v("上下")]),t._v("来切换历史命令，但手会离开键盘导致降低效率，可转换为使用"),a("code",[t._v("ctrl+p")]),t._v("和"),a("code",[t._v("ctrl+n")])])]),t._v(" "),a("h3",{attrs:{id:"关机、重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关机、重启"}},[t._v("#")]),t._v(" 关机、重启")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("时间"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("提示信息"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 10秒后关机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" -h +10 \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当天22:10关机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" -h "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":10 \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 现在关机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" -h now\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消之前设定的关机")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" -c \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n")])])]),a("h3",{attrs:{id:"kill命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kill命令"}},[t._v("#")]),t._v(" kill命令")]),t._v(" "),a("p",[t._v("向进程发送信号")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("代号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SIGHUP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("启动被终止的程序，可让该进程重新读取自己的配置文件，类似重新启动。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SIGINT")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相当于用键盘输入 [ctrl]-c 来中断一个程序的进行。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SIGKILL")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("代表强制中断一个程序的进行，如果该程序进行到一半，那么尚未完成的部分可能会有“半产品”产生，类似 vim会有 .filename.swp 保留下来。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SIGTERM")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("以正常的方式来终止该程序。由于是正常的终止，所以后续的动作会将他完成。不过，如果该程序已经发生问题，就是无法使用正常的方法终止时，输入这个 signal 也是没有用的。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SIGSTOP")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("相当于用键盘输入 [ctrl]-z 来暂停一个程序的进行。")])])])]),t._v(" "),a("h3",{attrs:{id:"iconv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iconv"}},[t._v("#")]),t._v(" iconv")]),t._v(" "),a("blockquote",[a("p",[t._v("用来转换文件的编码方式，它可以将UTF8编码的转换成GB18030的编码，反过来也行。")])]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("iconv -f encoding [-t encoding] [inputfile]...")])]),t._v(" "),a("p",[t._v("选项：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-f encoding :把字符从encoding编码开始转换。 \n-t encoding :把字符转换到encoding编码。 \n-l :列出已知的编码字符集合 \n-o file :指定输出文件 \n-c :忽略输出的非法字符 \n-s :禁止警告信息，但不是错误信息 \n--verbose :显示进度信息 \n-f和-t所能指定的合法字符在-l选项的命令里面都列出来了。 \n")])])]),a("p",[t._v("示例：")]),t._v(" "),a("p",[t._v("将文件file1转码，转后文件输出到fil2中："),a("code",[t._v("iconv file1 -f EUC-JP-MS -t UTF-8 -o file2")])]),t._v(" "),a("h3",{attrs:{id:"sed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[t._v("#")]),t._v(" sed")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/wP9_wvoTARRrlszsOmvMgQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux生产环境上，最常用的一套“Sed“技巧"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[t._v("#")]),t._v(" awk")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/aRy3QlMUpSNOKf2pyN6Uuw",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux生产环境上，最常用的一套“AWK“技巧"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用操作"}},[t._v("#")]),t._v(" 常用操作")]),t._v(" "),a("h3",{attrs:{id:"添加path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加path"}},[t._v("#")]),t._v(" 添加PATH")]),t._v(" "),a("p",[t._v("以openresty为例：\n"),a("strong",[t._v("只能在当前会话临时生效")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/openresty/sbin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")]),t._v("\n")])])]),a("p",[a("strong",[t._v("永久有效")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/profile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加`export PATH=$PATH:/usr/local/openresty/bin`到文件末尾")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /etc/profile\n")])])]),a("h2",{attrs:{id:"iostat命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iostat命令"}},[t._v("#")]),t._v(" iostat命令")]),t._v(" "),a("blockquote",[a("p",[t._v("用于监控系统设备的IO负载情况。")])]),t._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 使用which来查看是否安装\n$ which iostat\n\n# 安装\n$ sudo apt-get install sysstat\n")])])]),a("h3",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ iostat -d -k 1 10         #查看TPS和吞吐量信息\n$ iostat -d -x -k 1 10      #查看设备使用率（%util）、响应时间（await）\n$ iostat -c 1 10            #查看cpu状态\n")])])]),a("h3",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("iostat [ -c ] [ -d ] [ -h ] [ -N ] [ -k | -m ] [ -t ] [ -V ] [ -x ] [ -z ] [ device [...] | ALL ] [ -p [ device [,...] | ALL ] ] [ interval [ count ] ]\n-d    表示显示设备（磁盘）使用状态\n-x    表示显示和io相关的扩展数据，可以获取更详细的数据\n-k    表示某些使用block为单位的列强制使用Kilobytes为单位\n-c    参数，查看cpu信息\n")])])]),a("h3",{attrs:{id:"每隔两秒刷新一次-一共刷新3次。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每隔两秒刷新一次-一共刷新3次。"}},[t._v("#")]),t._v(" 每隔两秒刷新一次，一共刷新3次。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ iostat -d -k 2 3\n\n# 输出结果\nDevice             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn\nloop0             0.01         0.01         0.00       9466          0\nloop1             0.00         0.00         0.00       1078          0\nloop2             0.00         0.00         0.00       1072          0\nloop3             0.01         0.01         0.00      10742          0\nloop4             0.00         0.00         0.00          4          0\nmmcblk0           0.88         0.68        10.34     764178   11678225\n\n# 列含义\ntps：该设备每秒的传输次数（Indicate the number of transfers per second that were issued to the device.）\n"一次传输"意思是"一次I/O请求"。多个逻辑请求可能会被合并为"一次I/O请求"。"一次传输"请求的大小是未知的。\nkB_read/s：每秒从设备（drive expressed）读取的数据量；\nkB_wrtn/s：每秒向设备（drive expressed）写入的数据量；\nkB_read：读取的总数据量；\nkB_wrtn：写入的总数量：这些单位都为Kilobytes，即KB\n')])])]),a("h3",{attrs:{id:"指定监控设备-使用-x获取扩展参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定监控设备-使用-x获取扩展参数"}},[t._v("#")]),t._v(" 指定监控设备，使用-x获取扩展参数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ iostat -d mmcblk0 -x -k 2\n\n# 输出结果\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nmmcblk0          0.03    0.86      0.68     10.34     0.02     0.76  37.18  47.00    2.72   19.90   0.01    25.32    12.06   4.46   0.39\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nmmcblk0          0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00\n\nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util\nmmcblk0          0.00    8.50      0.00     54.00     0.00     4.50   0.00  34.62    0.00    7.35   0.03     0.00     6.35   1.76   1.50\n\n# 列含义\nrrqm/s：每秒这个设备相关的读取请求有多少被Merge了（当系统调用需要读取数据的时候，VFS将请求发到各个FS，如果FS发现不同的读取请求读取的是相同Block的数据，FS会将这个请求合并Merge）；\nwrqm/s：每秒这个设备相关的写入请求有多少被Merge了。\nr/s: The number of read requests that were issued to the device per second 每秒发出的读取请求的数量\nw/s: The number of write requests that were issued to the device per second 没面发出的写入请求的数量\nrkB/s： The number of kilobytes read from the device per second 以千字节每秒从设备读取数\nwkB/s： The number of kilobytes written to the device per second. 以千字节每秒从设备写入取数\navgrq-sz 平均请求扇区的大小\navgqu-sz 是平均请求队列的长度。毫无疑问，队列长度越短越好。    \nawait：  每一个IO请求的处理的平均时间（单位是微秒毫秒）。这里可以理解为IO的响应时间，一般地系统IO响应时间应该低于5ms，如果大于10ms就比较大了。\n         这个时间包括了队列时间和服务时间，也就是说，一般情况下，await大于svctm，它们的差值越小，则说明队列时间越短，反之差值越大，队列时间越长，说明系统出了问题。         \nsvctm    表示平均每次设备I/O操作的服务时间（以毫秒为单位）。如果svctm的值与await很接近，表示几乎没有I/O等待，磁盘性能很好，如果await的值远高于svctm的值，则表示I/O队列等待太长，系统上运行的应用程序将变慢。\n\n%util： 这个值越小越好，在统计时间内所有处理IO时间，除以总共统计时间。例如，如果统计间隔1秒，该设备有0.8秒在处理IO，而0.2秒闲置，那么该设备的%util = 0.8/1 = 80%，所以该参数暗示了设备的繁忙程度\n。一般地，如果该参数是100%表示设备已经接近满负荷运行了（当然如果是多磁盘，即使%util是100%，因为磁盘的并发能力，所以磁盘使用未必就到了瓶颈）。\nrsec/s：每秒读取的扇区数；\nwsec/： 每秒写入的扇区数。\n")])])]),a("h3",{attrs:{id:"参考地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考地址"}},[t._v("#")]),t._v(" 参考地址")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.51cto.com/linuxg/1783853",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux 系统下iostat、iotop、vmstat安装以及用法介绍"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858810.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux IO实时监控iostat命令详解-该博客介绍了很多Linux常用工具"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"linux中多个命令顺序执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux中多个命令顺序执行"}},[t._v("#")]),t._v(" linux中多个命令顺序执行")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//例如git的使用\n> git add . && git commit -m 'xxx'\n")])])]),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/everfight/p/linux_symbol.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux多命令的顺序执行"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"bin-bash和-bin-sh的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bin-bash和-bin-sh的区别"}},[t._v("#")]),t._v(" #!/bin/bash和#!/bin/sh的区别")]),t._v(" "),a("blockquote",[a("p",[t._v("脚本中只有第一行可以使用shebang(#!)来定义解释该脚本所使用的解释器。如果脚本作为bash命令行的参数运行，就不用使用shebang了，因此通常shebang是用实现脚本独立运行。")])]),t._v(" "),a("p",[t._v("两者分别指定了当前脚本中所使用的解释器。通常/bin/sh是bash的软链。可以通过"),a("code",[t._v("ls -l /bin/sh")]),t._v("查看。\n"),a("strong",[t._v("当使用"),a("code",[t._v("sh xxx")]),t._v("运行脚本时，则会使用sh解释器执行脚本。（大家平时容易忽略他们的区别）")])]),t._v(" "),a("h2",{attrs:{id:"linux环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux环境变量"}},[t._v("#")]),t._v(" linux环境变量")]),t._v(" "),a("p",[a("strong",[t._v("系统级：")])]),t._v(" "),a("ul",[a("li",[t._v("/etc/profile")]),t._v(" "),a("li",[t._v("/etc/bashrc（Ubuntu和Debian中是/etc/bash.bashrc）")]),t._v(" "),a("li",[t._v("/etc/environment")])]),t._v(" "),a("p",[a("strong",[t._v("用户级：")])]),t._v(" "),a("ul",[a("li",[t._v("~/.profile（推荐首选）")]),t._v(" "),a("li",[t._v("~/.bashrc")]),t._v(" "),a("li",[t._v("~/.bash_profile 或 ~./bash_login")]),t._v(" "),a("li",[t._v("~/.bash_logout")])]),t._v(" "),a("p",[t._v("[参考地址")]),t._v(" "),a("h2",{attrs:{id:"用户和用户组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户和用户组"}},[t._v("#")]),t._v(" 用户和用户组")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查看所有用户组信息")]),t._v(" "),a("p",[t._v("cat /etc/group")])]),t._v(" "),a("li",[a("p",[t._v("用户拥有多个用户，临时切换用户组")]),t._v(" "),a("p",[t._v("newgrp root")])]),t._v(" "),a("li",[a("p",[t._v("将用户加入到某个组中，而不离开原有组")]),t._v(" "),a("p",[t._v("sudo usermod -a -G [group] [user]")])]),t._v(" "),a("li",[a("p",[t._v("修改用户的主要用户组")]),t._v(" "),a("p",[t._v("usermod -g [group] [user]")])]),t._v(" "),a("li",[a("p",[t._v("将用户从某个组中删除（但group不能是主要用户组）")]),t._v(" "),a("p",[t._v("gpasswd -d [user] [group]")])]),t._v(" "),a("li",[a("p",[t._v("查看用户信息（uid、gid、归属的用户组）")]),t._v(" "),a("p",[t._v("id")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);