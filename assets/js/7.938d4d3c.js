(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{390:function(s,a,e){s.exports=e.p+"assets/img/youngGC日志释义.c2648588.png"},391:function(s,a,e){s.exports=e.p+"assets/img/FullGC日志详解.02f13777.png"},392:function(s,a,e){s.exports=e.p+"assets/img/image-20220113233444999-16420880915731.1dfbda27.png"},558:function(s,a,e){"use strict";e.r(a);var t=e(42),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"gc日志专题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc日志专题"}},[s._v("#")]),s._v(" GC日志专题")]),s._v(" "),t("p",[s._v("所有对象的创建，生命周期中的使用，到最后销毁的整个过程，都是由GC模块管理的，真正应该称之为"),t("code",[s._v("内存管理器")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"gc日志打印常用参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc日志打印常用参数"}},[s._v("#")]),s._v(" GC日志打印常用参数")]),s._v(" "),t("p",[s._v("打印GC日志：\n"),t("code",[s._v("java -XX:+PrintGCDetails xxxclass")]),s._v(" 执行时，会打印gc的详细日志")]),s._v(" "),t("p",[t("code",[s._v("-XX:+PrintGCDateStamps")]),s._v(" 日志会打印时间戳")]),s._v(" "),t("p",[t("code",[s._v("-Xloggc:gc.demo.log")]),s._v(" 将gc日志输出到指定文件gc.demo.log")]),s._v(" "),t("h2",{attrs:{id:"解析gc日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析gc日志"}},[s._v("#")]),s._v(" 解析GC日志")]),s._v(" "),t("p",[s._v("下面会使用同一段程序，切换多个GC，来解析GC日志")]),s._v(" "),t("p",[s._v("执行的代码：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n演示GC日志生成与解读\n*/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GCLogAnalysis")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" random "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前毫秒时间戳")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" startMillis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 持续运行毫秒数; 可根据需要进行修改")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" timeoutMillis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束时间戳")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" endMillis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" startMillis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" timeoutMillis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LongAdder")]),s._v(" counter "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LongAdder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"正在执行..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓存一部分对象; 进入老年代")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" cacheSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" cachedGarbage "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cacheSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此时间范围内,持续循环")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" endMillis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成垃圾对象")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" garbage "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("generateGarbage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" randomIndex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" random"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" cacheSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("randomIndex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" cacheSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                cachedGarbage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("randomIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" garbage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行结束!共生成对象次数:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("longValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成对象")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("generateGarbage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" randomSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" random"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" type "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" randomSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("randomSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("randomSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("randomSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuilder")]),s._v(" builder "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringBuilder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" randomString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"randomString-Anything"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" randomSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("randomString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("randomSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"并行gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并行gc"}},[s._v("#")]),s._v(" 并行GC")]),s._v(" "),t("blockquote",[t("p",[s._v("Java8默认的GC")])]),s._v(" "),t("p",[s._v("下面是产生YoungGC时的日志示例：")]),s._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("jesse$ java -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xmx2g -Xms2g javaclass\n\n2021-05-15T15:57:00.829+0800: [GC (Allocation Failure) [PSYoungGen: 524800K->87022K(611840K)] 524800K->153159K(2010112K), 0.0405788 secs] [Times: user=0.19 sys=0.12, real=0.04 secs] \n2021-05-15T15:57:00.971+0800: [GC (Allocation Failure) [PSYoungGen: 611822K->87024K(611840K)] 677959K->266402K(2010112K), 0.0534516 secs] [Times: user=0.23 sys=0.20, real=0.05 secs] \n2021-05-15T15:57:01.120+0800: [GC (Allocation Failure) [PSYoungGen: 611495K->87035K(611840K)] 790873K->382782K(2010112K), 0.0576040 secs] [Times: user=0.36 sys=0.09, real=0.06 secs] \n2021-05-15T15:57:01.270+0800: [GC (Allocation Failure) [PSYoungGen: 611835K->87027K(611840K)] 907582K->497519K(2010112K), 0.0584238 secs] [Times: user=0.36 sys=0.11, real=0.06 secs] \n2021-05-15T15:57:01.421+0800: [GC (Allocation Failure) [PSYoungGen: 611827K->87029K(611840K)] 1022319K->621339K(2010112K), 0.0617433 secs] [Times: user=0.34 sys=0.15, real=0.06 secs] \n2021-05-15T15:57:01.577+0800: [GC (Allocation Failure) [PSYoungGen: 611711K->87035K(321024K)] 1146020K->733392K(1719296K), 0.0685264 secs] [Times: user=0.31 sys=0.19, real=0.08 secs] \n执行结束!共生成对象次数:11859\nHeap\n PSYoungGen      total 321024K, used 96528K [0x00000000d5580000, 0x0000000100000000, 0x0000000100000000)\n  eden space 233984K, 4% used [0x00000000d5580000,0x00000000d5ec53c8,0x00000000e3a00000)\n  from space 87040K, 99% used [0x00000000fab00000,0x00000000ffffeea0,0x0000000100000000)\n  to   space 232448K, 0% used [0x00000000e3a00000,0x00000000e3a00000,0x00000000f1d00000)\n ParOldGen       total 1398272K, used 646357K [0x0000000080000000, 0x00000000d5580000, 0x00000000d5580000)\n  object space 1398272K, 46% used [0x0000000080000000,0x00000000a7735530,0x00000000d5580000)\n Metaspace       used 2546K, capacity 4486K, committed 4864K, reserved 1056768K\n  class space    used 273K, capacity 386K, committed 512K, reserved 1048576K\n")])])]),t("p",[s._v("接下来我们分析下GC日志具体有什么内容：先看日志第一行")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("日志")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("2021-05-15T15:57:00.829+0800")]),s._v(" "),t("td",[s._v("是"),t("code",[s._v("-XX:+PrintGCDateStamps")]),s._v("加上后打印出来的时间戳")])]),s._v(" "),t("tr",[t("td",[s._v("GC (Allocation Failure)")]),s._v(" "),t("td",[s._v("表示gc执行的原因，此处意为分配失败")])]),s._v(" "),t("tr",[t("td",[s._v("PSYoungGen: 524800K->87022K(611840K)")]),s._v(" "),t("td",[s._v("PSYoungGen：并行young GC"),t("br"),s._v("表示young区占用的内存（对象）从524800K压缩到了87022K，括号里的611840K代表整个young区的最大容量")])]),s._v(" "),t("tr",[t("td",[s._v("524800K->153159K(2010112K)")]),s._v(" "),t("td",[s._v("后面这段表示整个堆内存的内存占用，这里与上面young区差的就是old区")])]),s._v(" "),t("tr",[t("td",[s._v("0.0405788 secs")]),s._v(" "),t("td",[s._v("YoungGC的时间")])]),s._v(" "),t("tr",[t("td",[s._v("[Times: user=0.19 sys=0.12, real=0.04 secs]")]),s._v(" "),t("td",[s._v("youngGC的用户耗时、系统耗时、实际耗时")])])])]),s._v(" "),t("p",[t("em",[s._v("可以看出第一次垃圾回收时young区和整个堆内存的内存占用是一致的，这是因为最开始还没有对象晋升到old区。")])]),s._v(" "),t("p",[s._v("图文示例：")]),s._v(" "),t("p",[t("img",{attrs:{src:e(390),alt:"youngGC日志释义"}})]),s._v(" "),t("p",[s._v("下面是FullGC日志：")]),s._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("2021-05-17T23:01:02.587+0800: [Full GC (Ergonomics) [PSYoungGen: 17594K->0K(113664K)] [ParOldGen: 308012K->265261K(341504K)] 325607K->265261K(455168K), [Metaspace: 2540K->2540K(1056768K)], 0.0694247 secs] [Times: user=0.52 sys=0.01, real=0.06 secs] \n2021-05-17T23:01:02.668+0800: [GC (Allocation Failure) [PSYoungGen: 56832K->17484K(113664K)] 322093K->282745K(455168K), 0.0064969 secs] [Times: user=0.05 sys=0.00, real=0.00 secs] \n2021-05-17T23:01:02.685+0800: [GC (Allocation Failure) [PSYoungGen: 74213K->18540K(113664K)] 339474K->300211K(455168K), 0.0120198 secs] [Times: user=0.09 sys=0.00, real=0.01 secs] \n2021-05-17T23:01:02.706+0800: [GC (Allocation Failure) [PSYoungGen: 75341K->25265K(113664K)] 357011K->323768K(455168K), 0.0140829 secs] [Times: user=0.11 sys=0.00, real=0.01 secs] \n2021-05-17T23:01:02.721+0800: [Full GC (Ergonomics) [PSYoungGen: 25265K->0K(113664K)] [ParOldGen: 298502K->282852K(341504K)] 323768K->282852K(455168K), [Metaspace: 2540K->2540K(1056768K)], 0.0725073 secs] [Times: user=0.56 sys=0.00, real=0.07 secs]\n")])])]),t("p",[s._v("分析FullGC日志：第一行")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("Full GC (Ergonomics)")]),s._v("代表执行的是FullGC，"),t("code",[s._v("Ergonomics")]),s._v("的中文意思是人体工程学，也就是根据算法估算下次可能会无法分配内存，"),t("em",[s._v("提前执行一次FullGC")]),s._v("。")])]),s._v(" "),t("p",[s._v("出现FullGC的常见原因：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Full GC (Allocation Failure)")])]),s._v(" "),t("li",[t("p",[s._v("Full GC (Ergonomics)")])]),s._v(" "),t("li",[t("p",[s._v("Full GC (Metadata GC Threshold)")])])]),s._v(" "),t("blockquote",[t("p",[s._v("在JVM中的垃圾收集器中的Ergonomics就是负责自动的调解gc暂停时间和吞吐量之间的平衡，然后你的虚拟机性能更好的一种做法。")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("code",[s._v("[PSYoungGen: 17594K->0K(113664K)]")]),s._v("young区在FullGC时会清空掉。")]),s._v(" "),t("li",[t("code",[s._v("[ParOldGen: 308012K->265261K(341504K)]")]),s._v("old区在FullGC时会进行压缩。")]),s._v(" "),t("li",[t("code",[s._v("[Metaspace: 2540K->2540K(1056768K)]")]),s._v("元数据区执行FullGC时没有变化，jdk7是PSPermGen（永久代），jdk8更改为meta区（元空间）。")]),s._v(" "),t("li",[t("code",[s._v("0.0694247 secs")]),s._v("代表FullGC的耗时")]),s._v(" "),t("li",[t("code",[s._v("[Times: user=0.52 sys=0.01, real=0.06 secs]")]),s._v("与youngGC一样。")])]),s._v(" "),t("p",[s._v("图文示例：")]),s._v(" "),t("p",[t("img",{attrs:{src:e(391),alt:"FullGC日志详解"}})]),s._v(" "),t("h3",{attrs:{id:"串行gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#串行gc"}},[s._v("#")]),s._v(" 串行GC")]),s._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("jesse$ java -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseSerialGC  -Xmx100m -Xms100m GCLogAnalysis\n\n2021-05-18T23:47:27.922+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.922+0800: [DefNew: 26896K->3392K(30720K), 0.0044572 secs] 26896K->8430K(99008K), 0.0045628 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] \n2021-05-18T23:47:27.936+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.936+0800: [DefNew: 30443K->3391K(30720K), 0.0076210 secs] 35482K->17402K(99008K), 0.0076747 secs] [Times: user=0.00 sys=0.01, real=0.01 secs] \n2021-05-18T23:47:27.957+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.957+0800: [DefNew: 30719K->3372K(30720K), 0.0048223 secs] 44730K->25250K(99008K), 0.0048821 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-18T23:47:27.970+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.970+0800: [DefNew: 30700K->3381K(30720K), 0.0050724 secs] 52578K->33409K(99008K), 0.0051447 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n2021-05-18T23:47:27.982+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.982+0800: [DefNew: 30709K->3389K(30720K), 0.0073571 secs] 60737K->44768K(99008K), 0.0074114 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-18T23:47:27.996+0800: [GC (Allocation Failure) 2021-05-18T23:47:27.996+0800: [DefNew: 30453K->3391K(30720K), 0.0061754 secs] 71832K->53531K(99008K), 0.0062303 secs] [Times: user=0.00 sys=0.01, real=0.01 secs] \n2021-05-18T23:47:28.009+0800: [GC (Allocation Failure) 2021-05-18T23:47:28.009+0800: [DefNew: 30550K->3389K(30720K), 0.0062526 secs] 80690K->62820K(99008K), 0.0063055 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-18T23:47:28.020+0800: [GC (Allocation Failure) 2021-05-18T23:47:28.020+0800: [DefNew: 30622K->30622K(30720K), 0.0000235 secs]2021-05-18T23:47:28.020+0800: [Tenured: 59431K->68237K(68288K), 0.0158607 secs] 90053K->71211K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0159623 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] \n2021-05-18T23:47:28.042+0800: [Full GC (Allocation Failure) 2021-05-18T23:47:28.042+0800: [Tenured: 68237K->68246K(68288K), 0.0152800 secs] 98730K->79069K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0153404 secs] [Times: user=0.02 sys=0.00, real=0.01 secs] \n2021-05-18T23:47:28.061+0800: [Full GC (Allocation Failure) 2021-05-18T23:47:28.061+0800: [Tenured: 68246K->67959K(68288K), 0.0149245 secs] 98878K->84519K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0149797 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]\n")])])]),t("p",[s._v("可以看出"),t("code",[s._v("UseSerialGC")]),s._v("在young区使用了"),t("code",[s._v("DefNew")]),s._v("垃圾收集器，"),t("code",[s._v("Tenured")]),s._v("则是代表old区，并且在某一次非FullGC时，同时执行了young区和old区的垃圾回收。其他与并行GC区别不大。")]),s._v(" "),t("h3",{attrs:{id:"cms-gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cms-gc"}},[s._v("#")]),s._v(" CMS GC")]),s._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('jesse$ java -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+UseConcMarkSweepGC  -Xmx100m -Xms100m GCLogAnalysis\n\n2021-05-19T00:11:15.132+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.132+0800: [ParNew: 27229K->3391K(30720K), 0.0037007 secs] 27229K->10610K(99008K), 0.0037781 secs] [Times: user=0.01 sys=0.02, real=0.00 secs] \n-------此处发生多次GC (Allocation Failure)-------\n2021-05-19T00:11:15.192+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 41471K(68288K)] 45517K(99008K), 0.0002588 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.193+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.193+0800: [CMS-concurrent-mark: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.193+0800: [CMS-concurrent-preclean-start]\n2021-05-19T00:11:15.194+0800: [CMS-concurrent-preclean: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.194+0800: [CMS-concurrent-abortable-preclean-start]\n2021-05-19T00:11:15.198+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.198+0800: [ParNew: 30667K->3376K(30720K), 0.0064299 secs] 72138K->54772K(99008K), 0.0064830 secs] [Times: user=0.04 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.210+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.210+0800: [ParNew: 30704K->3391K(30720K), 0.0049883 secs] 82100K->62027K(99008K), 0.0050630 secs] [Times: user=0.04 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.221+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.221+0800: [ParNew: 30708K->30708K(30720K), 0.0000506 secs]2021-05-19T00:11:15.221+0800: [CMS2021-05-19T00:11:15.221+0800: [CMS-concurrent-abortable-preclean: 0.001/0.028 secs] [Times: user=0.10 sys=0.00, real=0.03 secs] \n (concurrent mode failure): 58635K->65869K(68288K), 0.0192665 secs] 89344K->65869K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0194171 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.247+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.247+0800: [ParNew: 27072K->27072K(30720K), 0.0000383 secs]2021-05-19T00:11:15.247+0800: [CMS: 65869K->68067K(68288K), 0.0169597 secs] 92942K->72852K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0171223 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.264+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68067K(68288K)] 73863K(99008K), 0.0004737 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.264+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.265+0800: [CMS-concurrent-mark: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.265+0800: [CMS-concurrent-preclean-start]\n2021-05-19T00:11:15.266+0800: [CMS-concurrent-preclean: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.266+0800: [CMS-concurrent-abortable-preclean-start]\n2021-05-19T00:11:15.266+0800: [CMS-concurrent-abortable-preclean: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.266+0800: [GC (CMS Final Remark) [YG occupancy: 9697 K (30720 K)]2021-05-19T00:11:15.266+0800: [Rescan (parallel) , 0.0002076 secs]2021-05-19T00:11:15.266+0800: [weak refs processing, 0.0000140 secs]2021-05-19T00:11:15.266+0800: [class unloading, 0.0002604 secs]2021-05-19T00:11:15.266+0800: [scrub symbol table, 0.0003168 secs]2021-05-19T00:11:15.267+0800: [scrub string table, 0.0002255 secs][1 CMS-remark: 68067K(68288K)] 77765K(99008K), 0.0010911 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.267+0800: [CMS-concurrent-sweep-start]\n2021-05-19T00:11:15.267+0800: [CMS-concurrent-sweep: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.267+0800: [CMS-concurrent-reset-start]\n2021-05-19T00:11:15.267+0800: [CMS-concurrent-reset: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.271+0800: [GC (Allocation Failure) 2021-05-19T00:11:15.271+0800: [ParNew: 30694K->30694K(30720K), 0.0001260 secs]2021-05-19T00:11:15.271+0800: [CMS: 68067K->68203K(68288K), 0.0138106 secs] 98761K->81654K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0140288 secs] [Times: user=0.01 sys=0.00, real=0.01 secs]\n\n----------------此处省略多行类似GC日志----------------\n\n2021-05-19T00:11:15.337+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68117K(68288K)] 92674K(99008K), 0.0006324 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.338+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.338+0800: [CMS-concurrent-mark: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.338+0800: [CMS-concurrent-preclean-start]\n2021-05-19T00:11:15.339+0800: [CMS-concurrent-preclean: 0.000/0.000 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.339+0800: [CMS-concurrent-abortable-preclean-start]\n2021-05-19T00:11:15.339+0800: [CMS-concurrent-abortable-preclean: 0.000/0.000 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.339+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.339+0800: [CMS (concurrent mode failure): 68117K->68261K(68288K), 0.0082180 secs] 98833K->92954K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0082750 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.349+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.349+0800: [CMS: 68261K->68227K(68288K), 0.0194007 secs] 98965K->94020K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0194681 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.368+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68227K(68288K)] 94301K(99008K), 0.0003624 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.369+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.369+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.369+0800: [CMS2021-05-19T00:11:15.371+0800: [CMS-concurrent-mark: 0.001/0.002 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n (concurrent mode failure): 68227K->68281K(68288K), 0.0221579 secs] 98721K->95980K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0222169 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.392+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.392+0800: [CMS: 68281K->68213K(68288K), 0.0216581 secs] 98827K->96411K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0217184 secs] [Times: user=0.02 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.414+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68213K(68288K)] 96995K(99008K), 0.0004368 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.415+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.415+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.415+0800: [CMS2021-05-19T00:11:15.417+0800: [CMS-concurrent-mark: 0.001/0.002 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n (concurrent mode failure): 68213K->68198K(68288K), 0.0213393 secs] 98855K->96402K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0214075 secs] [Times: user=0.03 sys=0.00, real=0.02 secs] \n2021-05-19T00:11:15.437+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.437+0800: [CMS: 68198K->68143K(68288K), 0.0054181 secs] 98795K->97051K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0055051 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.443+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68143K(68288K)] 97426K(99008K), 0.0007019 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.444+0800: [CMS-concurrent-mark-start]\n2021-05-19T00:11:15.444+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.444+0800: [CMS2021-05-19T00:11:15.446+0800: [CMS-concurrent-mark: 0.001/0.002 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n (concurrent mode failure): 68143K->68143K(68288K), 0.0032796 secs] 98614K->97544K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0033336 secs] [Times: user=0.01 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.448+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.448+0800: [CMS: 68143K->68143K(68288K), 0.0013556 secs] 98839K->98223K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0014120 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.449+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.450+0800: [CMS: 68143K->68143K(68288K), 0.0011270 secs] 98546K->98546K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0011929 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.451+0800: [Full GC (Allocation Failure) 2021-05-19T00:11:15.451+0800: [CMS: 68143K->68125K(68288K), 0.0152224 secs] 98546K->98527K(99008K), [Metaspace: 2540K->2540K(1056768K)], 0.0152626 secs] [Times: user=0.02 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.466+0800: [GC (CMS Initial Mark) [1 CMS-initial-mark: 68125K(68288K)] 98527K(99008K), 0.0002910 secs] [Times: user=0.00 sys=0.00, real=0.00 secs] \n2021-05-19T00:11:15.467+0800: [CMS-concurrent-mark-start]\nException in thread "main" 2021-05-19T00:11:15.467+0800: [CMS-concurrent-mark: 0.001/0.001 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] \n2021-05-19T00:11:15.467+0800: [CMS-concurrent-preclean-start]\njava.lang.OutOfMemoryError: Java heap space\n\tat GCLogAnalysis.generateGarbage(GCLogAnalysis.java:42)\n\tat GCLogAnalysis.main(GCLogAnalysis.java:25)\n\n')])])]),t("p",[s._v("可以看出CMS GC在young区使用的是"),t("code",[s._v("ParNew")]),s._v("垃圾收集器，在老年代就是使用CMS垃圾收集器了，可以发现CMS垃圾收集会执行很多步骤。")]),s._v(" "),t("h3",{attrs:{id:"g1-gc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g1-gc"}},[s._v("#")]),s._v(" G1 GC")]),s._v(" "),t("div",{staticClass:"language-log extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('jesse$ java -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+UseG1GC  -Xmx100m -Xms100m GCLogAnalysis\n\n2021-05-19T00:45:29.601+0800: [GC pause (G1 Evacuation Pause) (young) 29M->10093K(100M), 0.0032925 secs]\n2021-05-19T00:45:29.621+0800: [GC pause (G1 Evacuation Pause) (young) 45M->24M(100M), 0.0048468 secs]\n2021-05-19T00:45:29.642+0800: [GC pause (G1 Evacuation Pause) (young)-- 75M->49M(100M), 0.0049933 secs]\n2021-05-19T00:45:29.647+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 50M->48M(100M), 0.0021580 secs]\n2021-05-19T00:45:29.650+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.650+0800: [GC concurrent-root-region-scan-end, 0.0000263 secs]\n2021-05-19T00:45:29.650+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.651+0800: [GC concurrent-mark-end, 0.0012330 secs]\n2021-05-19T00:45:29.651+0800: [GC remark, 0.0010260 secs]\n2021-05-19T00:45:29.652+0800: [GC cleanup 54M->54M(100M), 0.0003197 secs]\n2021-05-19T00:45:29.658+0800: [GC pause (G1 Evacuation Pause) (young)-- 82M->69M(100M), 0.0033098 secs]\n2021-05-19T00:45:29.661+0800: [GC pause (G1 Evacuation Pause) (mixed) 70M->63M(100M), 0.0017333 secs]\n2021-05-19T00:45:29.665+0800: [GC pause (G1 Evacuation Pause) (young) 75M->67M(100M), 0.0018694 secs]\n2021-05-19T00:45:29.667+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 68M->67M(100M), 0.0012085 secs]\n2021-05-19T00:45:29.669+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.669+0800: [GC concurrent-root-region-scan-end, 0.0001312 secs]\n2021-05-19T00:45:29.669+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.670+0800: [GC concurrent-mark-end, 0.0009429 secs]\n2021-05-19T00:45:29.670+0800: [GC remark, 0.0010988 secs]\n2021-05-19T00:45:29.671+0800: [GC cleanup 75M->74M(100M), 0.0003737 secs]\n2021-05-19T00:45:29.672+0800: [GC concurrent-cleanup-start]\n2021-05-19T00:45:29.672+0800: [GC concurrent-cleanup-end, 0.0000206 secs]\n2021-05-19T00:45:29.673+0800: [GC pause (G1 Evacuation Pause) (young) 82M->70M(100M), 0.0015186 secs]\n2021-05-19T00:45:29.675+0800: [GC pause (G1 Evacuation Pause) (mixed) 78M->64M(100M), 0.0022592 secs]\n2021-05-19T00:45:29.679+0800: [GC pause (G1 Evacuation Pause) (mixed) 70M->65M(100M), 0.0014884 secs]\n2021-05-19T00:45:29.680+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 66M->66M(100M), 0.0006846 secs]\n2021-05-19T00:45:29.681+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.681+0800: [GC concurrent-root-region-scan-end, 0.0000456 secs]\n2021-05-19T00:45:29.681+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.682+0800: [GC concurrent-mark-end, 0.0008500 secs]\n2021-05-19T00:45:29.682+0800: [GC remark, 0.0010961 secs]\n2021-05-19T00:45:29.683+0800: [GC cleanup 72M->72M(100M), 0.0003134 secs]\n2021-05-19T00:45:29.684+0800: [GC pause (G1 Evacuation Pause) (young) 75M->68M(100M), 0.0017291 secs]\n2021-05-19T00:45:29.687+0800: [GC pause (G1 Evacuation Pause) (mixed) 77M->70M(100M), 0.0025035 secs]\n2021-05-19T00:45:29.691+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 73M->71M(100M), 0.0014056 secs]\n2021-05-19T00:45:29.692+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.692+0800: [GC concurrent-root-region-scan-end, 0.0001464 secs]\n2021-05-19T00:45:29.692+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.693+0800: [GC concurrent-mark-end, 0.0009321 secs]\n2021-05-19T00:45:29.693+0800: [GC remark, 0.0011006 secs]\n2021-05-19T00:45:29.694+0800: [GC cleanup 78M->78M(100M), 0.0003301 secs]\n2021-05-19T00:45:29.695+0800: [GC pause (G1 Evacuation Pause) (young) 79M->74M(100M), 0.0013411 secs]\n2021-05-19T00:45:29.698+0800: [GC pause (G1 Evacuation Pause) (mixed) 81M->73M(100M), 0.0018896 secs]\n2021-05-19T00:45:29.700+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 74M->73M(100M), 0.0007626 secs]\n2021-05-19T00:45:29.700+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.700+0800: [GC concurrent-root-region-scan-end, 0.0000164 secs]\n2021-05-19T00:45:29.700+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.702+0800: [GC concurrent-mark-end, 0.0010740 secs]\n2021-05-19T00:45:29.702+0800: [GC remark, 0.0012480 secs]\n2021-05-19T00:45:29.703+0800: [GC cleanup 82M->82M(100M), 0.0004452 secs]\n2021-05-19T00:45:29.704+0800: [GC pause (G1 Evacuation Pause) (young)-- 83M->82M(100M), 0.0013198 secs]\n2021-05-19T00:45:29.706+0800: [GC pause (G1 Evacuation Pause) (mixed)-- 85M->85M(100M), 0.0007048 secs]\n2021-05-19T00:45:29.706+0800: [Full GC (Allocation Failure)  85M->72M(100M), 0.0134278 secs]\n2021-05-19T00:45:29.720+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 74M->73M(100M), 0.0019245 secs]\n2021-05-19T00:45:29.722+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.722+0800: [GC concurrent-root-region-scan-end, 0.0000880 secs]\n2021-05-19T00:45:29.722+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.723+0800: [GC pause (G1 Humongous Allocation) (young)-- 77M->75M(100M), 0.0013619 secs]\n2021-05-19T00:45:29.725+0800: [GC pause (G1 Evacuation Pause) (young) 77M->75M(100M), 0.0008103 secs]\n2021-05-19T00:45:29.726+0800: [GC concurrent-mark-end, 0.0033717 secs]\n2021-05-19T00:45:29.726+0800: [GC remark, 0.0012500 secs]\n2021-05-19T00:45:29.727+0800: [GC cleanup 77M->77M(100M), 0.0004065 secs]\n2021-05-19T00:45:29.728+0800: [GC pause (G1 Evacuation Pause) (young)-- 77M->76M(100M), 0.0008329 secs]\n2021-05-19T00:45:29.729+0800: [GC pause (G1 Humongous Allocation) (young)-- 77M->77M(100M), 0.0010191 secs]\n2021-05-19T00:45:29.730+0800: [Full GC (Allocation Failure)  77M->74M(100M), 0.0031904 secs]\n2021-05-19T00:45:29.733+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark) 76M->75M(100M), 0.0012407 secs]\n2021-05-19T00:45:29.735+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.735+0800: [GC concurrent-root-region-scan-end, 0.0000535 secs]\n2021-05-19T00:45:29.735+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.735+0800: [GC pause (G1 Evacuation Pause) (young)-- 76M->76M(100M), 0.0010960 secs]\n2021-05-19T00:45:29.736+0800: [Full GC (Allocation Failure)  76M->76M(100M), 0.0023247 secs]\n2021-05-19T00:45:29.739+0800: [GC concurrent-mark-abort]\n2021-05-19T00:45:29.739+0800: [GC pause (G1 Evacuation Pause) (young)-- 77M->77M(100M), 0.0027059 secs]\n2021-05-19T00:45:29.742+0800: [Full GC (Allocation Failure)  77M->75M(100M), 0.0026869 secs]\n2021-05-19T00:45:29.745+0800: [GC pause (G1 Evacuation Pause) (young)-- 76M->76M(100M), 0.0010872 secs]\n2021-05-19T00:45:29.746+0800: [Full GC (Allocation Failure)  76M->75M(100M), 0.0035007 secs]\n2021-05-19T00:45:29.750+0800: [GC pause (G1 Humongous Allocation) (young) (initial-mark)-- 76M->76M(100M), 0.0015863 secs]\n2021-05-19T00:45:29.751+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.751+0800: [GC concurrent-root-region-scan-end, 0.0000255 secs]\n2021-05-19T00:45:29.751+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.751+0800: [GC pause (G1 Humongous Allocation) (young) 76M->76M(100M), 0.0008159 secs]\n2021-05-19T00:45:29.752+0800: [Full GC (Allocation Failure)  76M->75M(100M), 0.0023190 secs]\n2021-05-19T00:45:29.755+0800: [GC pause (G1 Evacuation Pause) (young) 76M->75M(100M), 0.0010713 secs]\n2021-05-19T00:45:29.756+0800: [GC concurrent-mark-abort]\n2021-05-19T00:45:29.756+0800: [GC pause (G1 Evacuation Pause) (young)-- 76M->76M(100M), 0.0008249 secs]\n2021-05-19T00:45:29.757+0800: [Full GC (Allocation Failure)  76M->76M(100M), 0.0021754 secs]\n2021-05-19T00:45:29.760+0800: [GC pause (G1 Evacuation Pause) (young)-- 77M->77M(100M), 0.0011265 secs]\n2021-05-19T00:45:29.761+0800: [Full GC (Allocation Failure)  77M->76M(100M), 0.0022905 secs]\n2021-05-19T00:45:29.763+0800: [Full GC (Allocation Failure)  76M->76M(100M), 0.0026052 secs]\n2021-05-19T00:45:29.766+0800: [GC pause (G1 Evacuation Pause) (young) 76M->76M(100M), 0.0011091 secs]\n2021-05-19T00:45:29.767+0800: [GC pause (G1 Evacuation Pause) (young) (initial-mark) 76M->76M(100M), 0.0008196 secs]\n2021-05-19T00:45:29.768+0800: [GC concurrent-root-region-scan-start]\n2021-05-19T00:45:29.768+0800: [GC concurrent-root-region-scan-end, 0.0000298 secs]\n2021-05-19T00:45:29.768+0800: [GC concurrent-mark-start]\n2021-05-19T00:45:29.768+0800: [Full GC (Allocation Failure)  76M->250K(100M), 0.0022981 secs]\n2021-05-19T00:45:29.771+0800: [GC concurrent-mark-abort]\nException in thread "main" java.lang.OutOfMemoryError: Java heap space\n\tat java.util.Arrays.copyOfRange(Arrays.java:3664)\n\tat java.lang.String.<init>(String.java:207)\n\tat java.lang.StringBuilder.toString(StringBuilder.java:407)\n\tat GCLogAnalysis.generateGarbage(GCLogAnalysis.java:58)\n\tat GCLogAnalysis.main(GCLogAnalysis.java:25)\n')])])]),t("p",[s._v("同样可以看出G1GC也是有类似于CMSGC一样的标记清除步骤。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("日志")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("[GC pause (G1 Evacuation Pause) (young) 29M->10093K(100M), 0.0032925 secs]")]),s._v(" "),t("td",[s._v("转移暂停，young模式，从29M压缩到10M，花费了多少时间")])]),s._v(" "),t("tr",[t("td",[s._v("[GC pause (G1 Evacuation Pause) (mixed) 70M->65M(100M), 0.0014884 secs]")]),s._v(" "),t("td",[s._v("混合模式")])])])]),s._v(" "),t("p",[s._v("下图同样是G1的日志图，打印出了更详细的细节，下方更说明了图中标记的含义：")]),s._v(" "),t("p",[t("img",{attrs:{src:e(392),alt:"image-20220113233444999"}})]),s._v(" "),t("p",[s._v("1 表示 GC 发生的时间，一般使用可读的方式打印；")]),s._v(" "),t("p",[s._v("2 表示日志表明是 G1 的“转移暂停: 混合模式”，停顿了约 223ms；")]),s._v(" "),t("p",[s._v("3 表明由 8 个 Worker 线程并行执行，消耗了 214ms；")]),s._v(" "),t("p",[s._v("4 表示 Diff 越小越好，说明每个工作线程的速度都很均匀；")]),s._v(" "),t("p",[s._v("5 表示外部根区扫描，外部根是堆外区。JNI 引用，JVM 系统目录，Classloaders 等；")]),s._v(" "),t("p",[s._v("6 表示更新 RSet 的时间信息；")]),s._v(" "),t("p",[s._v("7 表示该任务主要是对 CSet 中存活对象进行转移（复制）；")]),s._v(" "),t("p",[s._v("8 表示花在 GC 之外的工作线程的时间；")]),s._v(" "),t("p",[s._v("9 表示并行阶段的 GC 总时间；")]),s._v(" "),t("p",[s._v("10 表示其他清理活动；")]),s._v(" "),t("p",[s._v("11表示收集结果统计；")]),s._v(" "),t("p",[s._v("12 表示时间花费统计。")]),s._v(" "),t("h2",{attrs:{id:"可视化工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可视化工具"}},[s._v("#")]),s._v(" 可视化工具")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("gceasy")])]),s._v(" "),t("li",[t("p",[s._v("GCViewer")])]),s._v(" "),t("li",[t("p",[s._v("使用脚本简单过滤")])])]),s._v(" "),t("h2",{attrs:{id:"linux耗时的三维度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux耗时的三维度"}},[s._v("#")]),s._v(" Linux耗时的三维度")]),s._v(" "),t("p",[s._v("在GC日志中也能看到这三个时间维度，下表做了解释，一般只关注real即可。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("维度")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("real")]),s._v(" "),t("td",[s._v("实际花费的时间，指的是从开始到结束所花费的时间。比如进程在等待 I/O 完成，这个阻塞时间也会被计算在内；")])]),s._v(" "),t("tr",[t("td",[s._v("user")]),s._v(" "),t("td",[s._v("进程在用户态（User Mode）所花费的时间，只统计本进程所使用的时间，注意是指多核；")])]),s._v(" "),t("tr",[t("td",[s._v("sys")]),s._v(" "),t("td",[s._v("进程在核心态（Kernel Mode）花费的 CPU 时间量，指的是内核中的系统调用所花费的时间，只统计本进程所使用的时间。")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);