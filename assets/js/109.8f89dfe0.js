(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{511:function(t,a,_){"use strict";_.r(a);var s=_(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("start~")]),t._v(" "),_("h3",{attrs:{id:"什么是幂等问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是幂等问题"}},[t._v("#")]),t._v(" 什么是幂等问题")]),t._v(" "),_("blockquote",[_("p",[t._v("什么是幂等: 同一个操作, 无论多少次, 结果都一样.\n接口幂等问题如下:(接口可重复调用, 多次调用返回的接口一致.)\n例如"),_("code",[t._v("查询/删除")]),t._v("接口是天然幂等的.")])]),t._v(" "),_("ul",[_("li",[t._v("一个订单创建接口，第一次调用超时了，然后调用方重试了一次")]),t._v(" "),_("li",[t._v("在订单创建时，我们需要去扣减库存，这时接口发生了超时，调用方重试了一次")]),t._v(" "),_("li",[t._v("当这笔订单开始支付，在支付请求发出之后，在服务端发生了扣钱操作，接口响应超时了，调用方重试了一次")]),t._v(" "),_("li",[t._v("一个订单状态更新接口，调用方连续发送了两个消息，一个是已创建，一个是已付款。但是你先接收到已付款，然后又接收到了已创建")]),t._v(" "),_("li",[t._v("在支付完成订单之后，需要发送一条短信，当一台机器接收到短信发送的消息之后，处理较慢。消息中间件又把消息投递给另外一台机器处理")])]),t._v(" "),_("h3",{attrs:{id:"实现幂等的方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现幂等的方式"}},[t._v("#")]),t._v(" 实现幂等的方式")]),t._v(" "),_("h4",{attrs:{id:"_1-全局唯一id"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局唯一id"}},[t._v("#")]),t._v(" 1. 全局唯一ID")]),t._v(" "),_("h4",{attrs:{id:"_2-多版本控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-多版本控制"}},[t._v("#")]),t._v(" 2. 多版本控制")]),t._v(" "),_("h4",{attrs:{id:"_3-状态机控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-状态机控制"}},[t._v("#")]),t._v(" 3. 状态机控制")]),t._v(" "),_("blockquote",[_("p",[t._v("在分布式服务中, 要配合分布式锁使用.")])]),t._v(" "),_("h4",{attrs:{id:"_4-去重表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-去重表"}},[t._v("#")]),t._v(" 4. 去重表")]),t._v(" "),_("h4",{attrs:{id:"_5-使用ticketid-类似于去重表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用ticketid-类似于去重表"}},[t._v("#")]),t._v(" 5. 使用ticketId(类似于去重表)")]),t._v(" "),_("blockquote",[_("p",[t._v("将一个步骤拆分成两个步, 先获取ticketId.\n然后携带ticketId执行操作, 并记录执行操作和ticketId.")])]),t._v(" "),_("h4",{attrs:{id:"_6-token-redis实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-token-redis实现"}},[t._v("#")]),t._v(" 6. token+redis实现")]),t._v(" "),_("blockquote",[_("p",[t._v("调用前申请token, 调用结束删除token.")])]),t._v(" "),_("h4",{attrs:{id:"_7-悲观锁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-悲观锁"}},[t._v("#")]),t._v(" 7. 悲观锁")]),t._v(" "),_("blockquote",[_("p",[t._v("mysql使用for update实现.")])]),t._v(" "),_("h4",{attrs:{id:"_8-乐观锁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-乐观锁"}},[t._v("#")]),t._v(" 8. 乐观锁")]),t._v(" "),_("blockquote",[_("p",[t._v("通过version/status等条件都可以实现.")])]),t._v(" "),_("h4",{attrs:{id:"_9-分布式锁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-分布式锁"}},[t._v("#")]),t._v(" 9. 分布式锁")]),t._v(" "),_("h4",{attrs:{id:"_10-数据组合在数据库做唯一索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-数据组合在数据库做唯一索引"}},[t._v("#")]),t._v(" 10. 数据组合在数据库做唯一索引")])])}),[],!1,null,null,null);a.default=r.exports}}]);