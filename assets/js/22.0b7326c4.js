(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{387:function(t,s,e){t.exports=e.p+"assets/img/image-20210721002843487.862d7f66.png"},487:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redis从入门到放弃"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis从入门到放弃"}},[t._v("#")]),t._v(" Redis从入门到放弃")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#基础操作"}},[t._v("基础操作")]),a("ul",[a("li",[a("a",{attrs:{href:"#查询各个db对应的key数"}},[t._v("查询各个db对应的key数")])]),a("li",[a("a",{attrs:{href:"#查询连接数"}},[t._v("查询连接数")])]),a("li",[a("a",{attrs:{href:"#查询和设置最大连接数"}},[t._v("查询和设置最大连接数")])]),a("li",[a("a",{attrs:{href:"#关闭redis"}},[t._v("关闭redis")])]),a("li",[a("a",{attrs:{href:"#redis设置密码和redis-cli登陆验证auth"}},[t._v("redis设置密码和redis-cli登陆验证auth")])]),a("li",[a("a",{attrs:{href:"#scan高效遍历数据"}},[t._v("scan高效遍历数据")])]),a("li",[a("a",{attrs:{href:"#发布与订阅-pub-sub"}},[t._v("发布与订阅（pub/sub)")])])])]),a("li",[a("a",{attrs:{href:"#压测redis"}},[t._v("压测Redis")])]),a("li",[a("a",{attrs:{href:"#redis数据类型"}},[t._v("Redis数据类型")]),a("ul",[a("li",[a("a",{attrs:{href:"#string"}},[t._v("String")])]),a("li",[a("a",{attrs:{href:"#hash"}},[t._v("Hash")])]),a("li",[a("a",{attrs:{href:"#list"}},[t._v("List")])]),a("li",[a("a",{attrs:{href:"#set"}},[t._v("Set")])]),a("li",[a("a",{attrs:{href:"#sorted-set"}},[t._v("Sorted Set")])])])]),a("li",[a("a",{attrs:{href:"#redis安装"}},[t._v("Redis安装")])]),a("li",[a("a",{attrs:{href:"#redis配置"}},[t._v("Redis配置")]),a("ul",[a("li",[a("a",{attrs:{href:"#设置redis为后台服务-后台启动"}},[t._v("设置redis为后台服务/后台启动")])]),a("li",[a("a",{attrs:{href:"#设置访问密码"}},[t._v("设置访问密码")])])])]),a("li",[a("a",{attrs:{href:"#redis主从复制"}},[t._v("Redis主从复制")]),a("ul",[a("li",[a("a",{attrs:{href:"#主从复制主要作用"}},[t._v("主从复制主要作用")])]),a("li",[a("a",{attrs:{href:"#配置主从复制"}},[t._v("配置主从复制")])])])]),a("li",[a("a",{attrs:{href:"#redis-cli使用"}},[t._v("Redis-cli使用")])]),a("li",[a("a",{attrs:{href:"#redis-sentinel-高可用"}},[t._v("Redis Sentinel 高可用")]),a("ul",[a("li",[a("a",{attrs:{href:"#部署哨兵节点"}},[t._v("部署哨兵节点")])]),a("li",[a("a",{attrs:{href:"#哨兵的故障转移"}},[t._v("哨兵的故障转移")])])])]),a("li",[a("a",{attrs:{href:"#redis-cluster"}},[t._v("Redis Cluster")]),a("ul",[a("li",[a("a",{attrs:{href:"#集群的作用"}},[t._v("集群的作用")])]),a("li",[a("a",{attrs:{href:"#启动集群"}},[t._v("启动集群")])]),a("li",[a("a",{attrs:{href:"#集群部署的方案设计"}},[t._v("集群部署的方案设计")])]),a("li",[a("a",{attrs:{href:"#集群原理"}},[t._v("集群原理")])])])]),a("li",[a("a",{attrs:{href:"#redis的过期策略和内存淘汰机制"}},[t._v("Redis的过期策略和内存淘汰机制")])]),a("li",[a("a",{attrs:{href:"#单线程的redis为什么这么快"}},[t._v("单线程的redis为什么这么快")])]),a("li",[a("a",{attrs:{href:"#缓存穿透"}},[t._v("缓存穿透")])]),a("li",[a("a",{attrs:{href:"#缓存雪崩"}},[t._v("缓存雪崩")])]),a("li",[a("a",{attrs:{href:"#如何解决redis并发竞争key的问题"}},[t._v("如何解决redis并发竞争Key的问题")])]),a("li",[a("a",{attrs:{href:"#redis还应该消灭什么-todo"}},[t._v("redis还应该消灭什么(TODO)")])]),a("li",[a("a",{attrs:{href:"#redis复制原理和优化策略"}},[t._v("redis复制原理和优化策略")])]),a("li",[a("a",{attrs:{href:"#redis分布式解决方案"}},[t._v("redis分布式解决方案")])]),a("li",[a("a",{attrs:{href:"#redis和数据库双写一致性问题"}},[t._v("redis和数据库双写一致性问题")])]),a("li",[a("a",{attrs:{href:"#redis的慢查询"}},[t._v("Redis的慢查询")]),a("ul",[a("li",[a("a",{attrs:{href:"#需要了解的命令"}},[t._v("需要了解的命令")])]),a("li",[a("a",{attrs:{href:"#config"}},[t._v("config")])]),a("li",[a("a",{attrs:{href:"#slowlog"}},[t._v("slowlog")])]),a("li",[a("a",{attrs:{href:"#如何使用redis慢查询功能"}},[t._v("如何使用redis慢查询功能")])])])]),a("li",[a("a",{attrs:{href:"#redis面试问题汇总"}},[t._v("Redis面试问题汇总")])]),a("li",[a("a",{attrs:{href:"#redisson"}},[t._v("Redisson")])]),a("li",[a("a",{attrs:{href:"#redis问题汇总"}},[t._v("Redis问题汇总")]),a("ul",[a("li",[a("a",{attrs:{href:"#jedis、jedis的一个线上bug排查"}},[t._v("Jedis、jedis的一个线上bug排查")])]),a("li",[a("a",{attrs:{href:"#attempt-to-unlock-lock-not-locked-by-current-thread-by-node-id的意思是"}},[t._v("attempt to unlock lock, not locked by current thread by node id的意思是?")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"基础操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础操作"}},[t._v("#")]),t._v(" 基础操作")]),t._v(" "),a("h3",{attrs:{id:"查询各个db对应的key数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询各个db对应的key数"}},[t._v("#")]),t._v(" 查询各个db对应的key数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("info keyspace\n")])])]),a("h3",{attrs:{id:"查询连接数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询连接数"}},[t._v("#")]),t._v(" 查询连接数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("info clients\n")])])]),a("h3",{attrs:{id:"查询和设置最大连接数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询和设置最大连接数"}},[t._v("#")]),t._v(" 查询和设置最大连接数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("查询最大连接数\nconfig get maxclients\n设置~\nconfig set maxclients 10\n")])])]),a("h3",{attrs:{id:"关闭redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭redis"}},[t._v("#")]),t._v(" 关闭redis")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("关闭本地redis\n./redis-cli shutdown\n使用客户端远程关闭\nredis-cli -h xxx.xxx.xx.xx -p 6379 shutdown\n")])])]),a("h3",{attrs:{id:"redis设置密码和redis-cli登陆验证auth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis设置密码和redis-cli登陆验证auth"}},[t._v("#")]),t._v(" redis设置密码和redis-cli登陆验证auth")]),t._v(" "),a("p",[t._v("1.查看密码")]),t._v(" "),a("blockquote",[a("p",[t._v("config get requirepass")])]),t._v(" "),a("p",[t._v("2.设置密码")]),t._v(" "),a("p",[t._v("临时设置")]),t._v(" "),a("blockquote",[a("p",[t._v("config set requirepass 123456")])]),t._v(" "),a("p",[t._v("配置文件设置")]),t._v(" "),a("p",[t._v("requirepass 123456")]),t._v(" "),a("p",[t._v("3.使用redis-cli登陆后验证密码")]),t._v(" "),a("blockquote",[a("p",[t._v("auth 123456")])]),t._v(" "),a("h3",{attrs:{id:"scan高效遍历数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scan高效遍历数据"}},[t._v("#")]),t._v(" scan高效遍历数据")]),t._v(" "),a("p",[t._v("有时候需要使用keys匹配返回所有相关的数据做统计, 其实redis本身就不适合做此类工作, 但如果硬是有这个相关需求, 需要注意redis中存放的数据量基数, 否则会出现阻塞, 导致线上事故.")]),t._v(" "),a("p",[t._v("为什么不推荐用Keys")]),t._v(" "),a("ol",[a("li",[t._v("如果匹配的数据量大, 很难一次性接收或显示")]),t._v(" "),a("li",[t._v("keys使用遍历算法, 复杂度是O(n)")]),t._v(" "),a("li",[t._v("redis是单线程, 当前命令会阻塞其他命令执行")])]),t._v(" "),a("p",[t._v("推荐使用scan命令")]),t._v(" "),a("blockquote",[a("p",[t._v("2.8版本开始提供\nscan复杂度为O(n), 通过"),a("code",[t._v("游标")]),t._v("分布进行, 不阻塞线程. 并且提供limit控制返回结果的槽数, 因此返回结果数量多少不固定.\n返回结果可能出现重复, 要注意去重.\n遍历过程中修改的数据, 可能会出现遍历不到的情况")])]),t._v(" "),a("p",[t._v("如何使用")]),t._v(" "),a("blockquote",[a("p",[t._v("SCAN相关命令包括SSCAN 命令、HSCAN 命令和 ZSCAN 命令\n命令格式: SCAN cursor [MATCH pattern] [COUNT count]")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("示例\n查询当前db从cursor0开始的一百的slot的key\nscan 0 match * count 100\n")])])]),a("p",[t._v("参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://pipe.stupidzhang.com/blogs/stupidzhangsj/articles/2019/09/01/1567324764430",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redis 为什么不建议使用 keys 命令"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.toutiao.com/i6697540366528152077",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何统计redis key数量"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"发布与订阅-pub-sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布与订阅-pub-sub"}},[t._v("#")]),t._v(" 发布与订阅（pub/sub)")]),t._v(" "),a("p",[t._v("通过建立一个channel，让发布者与订阅者进行通信。")]),t._v(" "),a("h2",{attrs:{id:"压测redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压测redis"}},[t._v("#")]),t._v(" 压测Redis")]),t._v(" "),a("p",[t._v("常见的方式是使用redis-benchmark，以下介绍其使用方法。")]),t._v(" "),a("p",[t._v("redis-benchmark使用说明如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Usage: redis-benchmark [-h] [-p] [-c] [-n[-k]\n -h     Server hostname (default 127.0.0.1)\n -p     Server port (default 6379)\n -s     Server socket (overrides host and port)\n -c     Number of parallel connections (default 50)\n -n     Total number of requests (default 10000)\n -d      Data size of SET/GET value in bytes (default 2)\n -k      1=keep alive 0=reconnect (default 1)\n -r      Use random keys for SET/GET/INCR, random values for SADD\n  Using this option the benchmark will get/set keys\n  in the form mykey_rand:000000012456 instead of constant\n  keys, the argument determines the max\n  number of values for the random number. For instance\n  if set to 10 only rand:000000000000 - rand:000000000009\n  range will be allowed.\n -P       Pipelinerequests. Default 1 (no pipeline).\n -q       Quiet. Just show query/sec values\n —csv     Output in CSV format\n -l       Loop. Run the tests forever\n -t       Only run the comma-separated list of tests. The test\n  names are the same as the ones produced as output.\n -I       Idle mode. Just open N idle connections and wait.\n")])])]),a("p",[t._v("中文说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("选项")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-h")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定服务器主机名")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("127.0.0.1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-p")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定服务器端口")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("6379")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-s")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定服务器 socket")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-c")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定并发连接数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("50")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-n")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("指定请求数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10000")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-d")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以字节的形式指定 SET/GET 值的数据大小")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-k")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1=keep alive 0=reconnect")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-r")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("SET/GET/INCR 使用随机 key, SADD 使用随机值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-P")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("通过管道传输 "),a("numreq",[t._v(" 请求")])],1),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-q")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("强制退出 redis。仅显示 query/sec 值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("--csv")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以 CSV 格式输出")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("12")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-l")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("生成循环，永久执行测试")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("13")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-t")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("仅运行以逗号分隔的测试命令列表。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("14")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("-I")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Idle 模式。仅打开 N 个 idle 连接并等待。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("p",[t._v("测试命令示例：")]),t._v(" "),a("ol",[a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("redis-benchmark -h 192.168.1.201 -p 6379 -c 100 -n 100000\n")])])]),a("p",[t._v("100个并发连接，100000个请求，检测host为localhost端口为6379的redis服务器性能。")])]),t._v(" "),a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("redis-benchmark -h 192.168.1.201 -p 6379 -q -d 100\n")])])]),a("p",[t._v("测试存取大小为100字节的数据包的性能。")])]),t._v(" "),a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("redis-benchmark -t set,lpush -n 100000 -q\n")])])]),a("p",[t._v("只测试某些操作的性能。")])]),t._v(" "),a("li",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('redis-benchmark -n 100000 -q script load "redis.call(‘set’,’foo’,’bar’)"\n')])])]),a("p",[t._v("只测试某些数值存取的性能。")])])]),t._v(" "),a("p",[t._v("常加上参数-q来quiet执行命令，显示简洁的结果。")]),t._v(" "),a("h2",{attrs:{id:"redis数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis数据类型"}},[t._v("#")]),t._v(" Redis数据类型")]),t._v(" "),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),a("blockquote",[a("p",[t._v("常规的set/get操作, 可存放"),a("code",[t._v("String")]),t._v("或者"),a("code",[t._v("数字")]),t._v(", 一般用于复杂的计数功能缓存.")])]),t._v(" "),a("h3",{attrs:{id:"hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" Hash")]),t._v(" "),a("blockquote",[a("p",[t._v("结构化对象, 容易操作其中的某个字段, 常用于解决单点登录.")])]),t._v(" "),a("h3",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),a("blockquote",[a("p",[t._v("可以做简单的消息队列, 还可以利用"),a("code",[t._v("Irange")]),t._v("做基于redis的分页功能.")])]),t._v(" "),a("h3",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),a("blockquote",[a("p",[t._v("Set中存放的是不重复的集合, 可以用来做全局的去重功能. 通常是集群部署, 因此利用set进行交集/并集/差集等操作完成一些功能比Java的set方便.")])]),t._v(" "),a("h3",{attrs:{id:"sorted-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sorted-set"}},[t._v("#")]),t._v(" Sorted Set")]),t._v(" "),a("blockquote",[a("p",[t._v("多了一个权重参数Score, 集合中的元素能够按Score进行排列. 常用来做排行榜/取TopN/延时任务等操作.")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"redis安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis安装"}},[t._v("#")]),t._v(" Redis安装")]),t._v(" "),a("p",[t._v("linux下安装redis")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget http://download.redis.io/redis-stable.tar.gz")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar xzf redis-6.0.8.tar.gz")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd redis-6.0.8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make")]),t._v("\n")])])]),a("p",[t._v("执行完make后，会出现redis-server和redis-cli（位于src下）。")]),t._v(" "),a("p",[t._v("启动redis：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd src")]),t._v("\n默认配置启动\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./redis-server")]),t._v("\n指定配置启动\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./redis-server ../redis.conf")]),t._v("\n")])])]),a("h2",{attrs:{id:"redis配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis配置"}},[t._v("#")]),t._v(" Redis配置")]),t._v(" "),a("h3",{attrs:{id:"设置redis为后台服务-后台启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置redis为后台服务-后台启动"}},[t._v("#")]),t._v(" 设置redis为后台服务/后台启动")]),t._v(" "),a("p",[t._v("将配置文件中的"),a("code",[t._v("daemonize no")]),t._v("改为"),a("code",[t._v("daemonize yes")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"设置访问密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置访问密码"}},[t._v("#")]),t._v(" 设置访问密码")]),t._v(" "),a("p",[t._v("去掉配置文件中"),a("code",[t._v("requirepass")]),t._v("的注释符，并在后面添加密码。")]),t._v(" "),a("h2",{attrs:{id:"redis主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis主从复制"}},[t._v("#")]),t._v(" Redis主从复制")]),t._v(" "),a("h3",{attrs:{id:"主从复制主要作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主从复制主要作用"}},[t._v("#")]),t._v(" 主从复制主要作用")]),t._v(" "),a("ul",[a("li",[t._v("多机热备")]),t._v(" "),a("li",[t._v("读写分离")]),t._v(" "),a("li",[t._v("负载均衡")]),t._v(" "),a("li",[t._v("故障恢复")])]),t._v(" "),a("h3",{attrs:{id:"配置主从复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置主从复制"}},[t._v("#")]),t._v(" 配置主从复制")]),t._v(" "),a("p",[t._v("主从复制是在从节点发起的，不需要主节点做任何事情。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("修改从节点配置文件")]),t._v(" "),a("p",[t._v("配置文件中加入"),a("code",[t._v("salveof 127.0.0.1 6500")])])]),t._v(" "),a("li",[a("p",[t._v("先启动主节点，再启动从节点")]),t._v(" "),a("p",[t._v("启动从节点要指定执行对应修改的配置文件"),a("code",[t._v("./redis-server ../redis2.conf")])])])]),t._v(" "),a("h2",{attrs:{id:"redis-cli使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-cli使用"}},[t._v("#")]),t._v(" Redis-cli使用")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 关闭本地redis\n./redis-cli shutdown\n# 使用客户端远程关闭\nredis-cli -h xxx.xxx.xx.xx -p 6379 shutdown\n# 连接远程redis\nredis-cli -h xxx -p 6379\n")])])]),a("h2",{attrs:{id:"redis-sentinel-高可用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-sentinel-高可用"}},[t._v("#")]),t._v(" Redis Sentinel 高可用")]),t._v(" "),a("p",[t._v("哨兵架构由两部分组成：数据节点、哨兵节点。")]),t._v(" "),a("p",[t._v("数据节点：普通的主从节点，并无区别")]),t._v(" "),a("p",[t._v("哨兵节点：特殊节点，不存储数据")]),t._v(" "),a("h3",{attrs:{id:"部署哨兵节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署哨兵节点"}},[t._v("#")]),t._v(" 部署哨兵节点")]),t._v(" "),a("p",[t._v("三个哨兵节点配置文件除了端口完全相同即可。")]),t._v(" "),a("p",[t._v("配置：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6700")]),t._v("\ndaemonize "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\nlogfile sentinel-6700.log\nsentinel monitor mymaster "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[a("code",[t._v("sentinel monitor mymaster 127.0.0.1 6379 2")]),t._v(" 表示哨兵监控127.0.0.1:6379主节点，该主节点名称是mymaster；"),a("code",[t._v("2")]),t._v("表示至少需要两个哨兵节点同意才能判断主节点故障进行故障转移")]),t._v(" "),a("p",[t._v("启动哨兵：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 两种方式皆可启动哨兵，没区别，调用同一个脚本\nredis-sentinel sentinel-6700.conf\nredis-server sentinel-6700.conf --sentinel\n")])])]),a("p",[t._v("使用redis-cli连接哨兵节点：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("redis-cli -h 127.0.0.1 -p 6700\n")])])]),a("p",[t._v("使用info查看哨兵信息：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("127.0.0.1:6700> info Sentinel\n# Sentinel\nsentinel_masters:1  # 哨兵主节点1个\nsentinel_tilt:0\nsentinel_running_scripts:0\nsentinel_scripts_queue_length:0\nsentinel_simulate_failure_flags:0\nmaster0:name=mymaster,status=ok,address=127.0.0.1:6379,slaves=2,sentinels=3 # 数据主节点地址，数据从节点个数，哨兵个数\n")])])]),a("p",[t._v("此时查看哨兵节点配置文件，会发现有变化：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('port 6700\ndaemonize yes\nlogfile "sentinel-6700.log"\nsentinel monitor mymaster 127.0.0.1 6379 2\n# Generated by CONFIG REWRITE\nprotected-mode no\npidfile "/var/run/redis.pid"\nuser default on nopass ~* &* +@all\ndir "/home/jesse/redis"\nsentinel myid 01f804d4c24a122e82183579cbbf2322a92a016e\nsentinel config-epoch mymaster 0\nsentinel leader-epoch mymaster 0\nsentinel current-epoch 0\nsentinel known-replica mymaster 127.0.0.1 6500\nsentinel known-replica mymaster 127.0.0.1 6501\nsentinel known-sentinel mymaster 127.0.0.1 6701 3a010f567e4d3ad5c4d9f644c14299a3add0de89\nsentinel known-sentinel mymaster 127.0.0.1 6702 6564664c93e086cf79842ba0911654280dec2141\n')])])]),a("p",[t._v("从上面能看出数据从节点、哨兵从节点。")]),t._v(" "),a("h3",{attrs:{id:"哨兵的故障转移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哨兵的故障转移"}},[t._v("#")]),t._v(" 哨兵的故障转移")]),t._v(" "),a("p",[t._v("当redis数据主节点宕机（kill掉），可以连接哨兵查看info。一开始info没有变化，等一小会哨兵发现主节点故障， 执行故障转移，info中可以看到master节点address变为之前的数据从节点了：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(387),alt:"image-20210721002843487"}})]),t._v(" "),a("p",[t._v("重启原来主节点，可以发现自动变为了从节点。")]),t._v(" "),a("p",[t._v("哨兵执行故障转移，会改写所有的配置文件。")]),t._v(" "),a("p",[t._v("哨兵可以配置监控多个主节点，配置多个"),a("code",[t._v("sentinel monitor")]),t._v("即可。")]),t._v(" "),a("h2",{attrs:{id:"redis-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster"}},[t._v("#")]),t._v(" Redis Cluster")]),t._v(" "),a("p",[t._v("集群由多个节点组成，数据分布在这些节点中。")]),t._v(" "),a("p",[t._v("集群节点分为主节点、从节点：只有主节点负责读写请求和维护集群信息，从节点只用来同步主节点数据和状态。")]),t._v(" "),a("h3",{attrs:{id:"集群的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群的作用"}},[t._v("#")]),t._v(" 集群的作用")]),t._v(" "),a("ul",[a("li",[t._v("数据分片\n"),a("ul",[a("li",[t._v("突破单节点内存大小限制")]),t._v(" "),a("li",[t._v("每个主节点都可以对外提供读写服务，提高了响应能力")])])]),t._v(" "),a("li",[t._v("高可用\n"),a("ul",[a("li",[t._v("主从复制")]),t._v(" "),a("li",[t._v("主节点故障自动转移")])])])]),t._v(" "),a("h3",{attrs:{id:"启动集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动集群"}},[t._v("#")]),t._v(" 启动集群")]),t._v(" "),a("p",[t._v("通常使用脚本来启动，但也可以按照下面步骤手动启动")]),t._v(" "),a("p",[t._v("配置集群节点：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#redis-7000.conf\nport 7000\ncluster-enabled yes\ncluster-config-file "node-7000.conf"\nlogfile "log-7000.log"\ndbfilename "dump-7000.rdb"\ndaemonize yes\n')])])]),a("p",[a("code",[t._v("cluster-enabled")]),t._v(" 表示开启集群模式")]),t._v(" "),a("p",[a("code",[t._v("cluster-config-file")]),t._v(" 指定集群配置文件的位置。每个集群节点会维护一份集群配置文件，当集群信息发生变化时，节点会更新到配置文件中。当节点启动时，先会读取集群配置文件，如果没有配置文件，则初始化一份集群配置文件。")]),t._v(" "),a("p",[t._v("执行cluster nodes命令查看集群节点情况：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ src/redis-cli -p 7000 cluster nodes\n9817df9ac014be0e3325e1b03047e778782db501 :7000@17000 myself,master - 0 0 0 connected\n")])])]),a("p",[t._v("第一列代表节点id，重启不会重新生成。")]),t._v(" "),a("p",[a("strong",[t._v("节点握手")])]),t._v(" "),a("p",[t._v("以同样方式启动多个集群节点，再将它们进行节点握手，组成一个网络。")]),t._v(" "),a("p",[t._v("在7000节点中执行"),a("code",[t._v("CLUSTER MEET 192.168.3.29 7001")]),t._v("，即可完成7000节点与7001节点的握手。握手后可再查看集群节点情况。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 7000\n127.0.0.1:7000> CLUSTER MEET 192.168.3.29 7001\nOK\n127.0.0.1:7000> CLUSTER MEET 192.168.3.29 7002\nOK\n127.0.0.1:7000> CLUSTER MEET 192.168.3.29 7003\nOK\n127.0.0.1:7000> \n~/redis$ src/redis-cli -p 7000 cluster nodes\n9817df9ac014be0e3325e1b03047e778782db501 192.168.3.29:7000@17000 myself,master - 0 1626882680000 2 connected\nd5330393fabe6cabcfa9a490c3f334cf7ed8c2ee 192.168.3.29:7002@17002 master - 0 1626882681206 0 connected\n78a2919c8952e9db4b84fc04439a5b9d5dc869e3 192.168.3.29:7001@17001 master - 0 1626882680201 1 connected\n0ddfec297e09e3428801ee1106876fdc19e07886 192.168.3.29:7003@17003 handshake - 0 0 0 disconnected\n")])])]),a("p",[t._v("7003是没有启动redis集群节点的，所以显示disconnected。")]),t._v(" "),a("p",[a("strong",[t._v("分配槽")])]),t._v(" "),a("p",[t._v("集群一共有"),a("code",[t._v("16384(0-16383)")]),t._v("个槽，槽是数据管理和迁移的基本单位。将所有槽分配给集群节点之前，集群是下线状态，分配之后，集群将变为上线状态。")]),t._v(" "),a("p",[t._v("分配前可通过"),a("code",[t._v("cluster info")]),t._v("查看集群状态：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 7000 cluster info\ncluster_state:fail\ncluster_slots_assigned:0\ncluster_slots_ok:0\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:3\ncluster_size:0\ncluster_current_epoch:2\ncluster_my_epoch:2\ncluster_stats_messages_ping_sent:1522\ncluster_stats_messages_pong_sent:1455\ncluster_stats_messages_meet_sent:3\ncluster_stats_messages_sent:2980\ncluster_stats_messages_ping_received:1455\ncluster_stats_messages_pong_received:1376\ncluster_stats_messages_received:2831\n")])])]),a("p",[t._v("集群状态显示fail："),a("code",[t._v("cluster_state:fail")])]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("cluster addslots")]),t._v("命令分配槽：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 7000 cluster addslots {0..5461}\nOK\n~/redis$ src/redis-cli -p 7001 cluster addslots {5462..10922}\nOK\n~/redis$ src/redis-cli -p 7002 cluster addslots {10923..16383}\nOK\n")])])]),a("p",[t._v("再查看集群状态：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 7000 cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:3\ncluster_size:3\ncluster_current_epoch:2\ncluster_my_epoch:2\ncluster_stats_messages_ping_sent:1688\ncluster_stats_messages_pong_sent:1632\ncluster_stats_messages_meet_sent:3\ncluster_stats_messages_sent:3323\ncluster_stats_messages_ping_received:1632\ncluster_stats_messages_pong_received:1542\ncluster_stats_messages_received:3174\n")])])]),a("p",[t._v("此时集群就可以对外提供服务了。")]),t._v(" "),a("p",[a("strong",[t._v("接下来完善集群的高可用：指定主从关系")])]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("cluster replicate")]),t._v("为普通集群从节点指定主节点：")]),t._v(" "),a("p",[t._v("由于从节点没有执行握手，导致报错：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 8000 cluster replicate 9817df9ac014be0e3325e1b03047e778782db501\n(error) ERR Unknown node 9817df9ac014be0e3325e1b03047e778782db501\n")])])]),a("p",[t._v("握手加入集群后，成功配置主从关系：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~/redis$ src/redis-cli -p 7000\n127.0.0.1:7000> CLUSTER MEET 192.168.3.29 8000\nOK\njesse@jesse-shenzhou:~/redis$ ^C\n~/redis$ src/redis-cli -p 8000 cluster replicate 9817df9ac014be0e3325e1b03047e778782db501\nOK\n~/redis$ src/redis-cli -p 7000 cluster nodes\n9817df9ac014be0e3325e1b03047e778782db501 192.168.3.29:7000@17000 myself,master - 0 1626885259000 2 connected 0-5461\nd5330393fabe6cabcfa9a490c3f334cf7ed8c2ee 192.168.3.29:7002@17002 master - 0 1626885260792 0 connected 10923-16383\n2056c500a97e1ad6b68f5fbd91f14da9310d66bd 192.168.3.29:8000@18000 slave 9817df9ac014be0e3325e1b03047e778782db501 0 1626885261796 2 connected\n78a2919c8952e9db4b84fc04439a5b9d5dc869e3 192.168.3.29:7001@17001 master - 0 1626885260000 1 connected 5462-10922\n")])])]),a("p",[t._v("可以看到8000节点是slave连接状态。")]),t._v(" "),a("h3",{attrs:{id:"集群部署的方案设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群部署的方案设计"}},[t._v("#")]),t._v(" 集群部署的方案设计")]),t._v(" "),a("p",[t._v("设计集群方案时，至少要考虑以下因素：")]),t._v(" "),a("p",[t._v("（1）高可用要求：根据故障转移的原理，至少需要3个主节点才能完成故障转移，且3个主节点不应在同一台物理机上；每个主节点至少需要1个从节点，且主从节点不应在一台物理机上；因此高可用集群至少包含6个节点。")]),t._v(" "),a("p",[t._v("（2）数据量和访问量：估算应用需要的数据量和总访问量(考虑业务发展，留有冗余)，结合每个主节点的容量和能承受的访问量(可以通过benchmark得到较准确估计)，计算需要的主节点数量。")]),t._v(" "),a("p",[t._v("（3）节点数量限制：Redis官方给出的节点数量限制为1000，主要是考虑节点间通信带来的消耗。在实际应用中应尽量避免大集群；如果节点数量不足以满足应用对Redis数据量和访问量的要求，可以考虑：(1)业务分割，大集群分为多个小集群；(2)减少不必要的数据；(3)调整数据过期策略等。")]),t._v(" "),a("p",[t._v("（4）适度冗余：Redis可以在不影响集群服务的情况下增加节点，因此节点数量适当冗余即可，不用太大。")]),t._v(" "),a("h3",{attrs:{id:"集群原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群原理"}},[t._v("#")]),t._v(" 集群原理")]),t._v(" "),a("h2",{attrs:{id:"redis的过期策略和内存淘汰机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis的过期策略和内存淘汰机制"}},[t._v("#")]),t._v(" Redis的过期策略和内存淘汰机制")]),t._v(" "),a("blockquote",[a("p",[t._v("比如你redis只能存5G数据, 可是写入了10G, 此时会删除5G数据, 请问redis是如何删除的?")])]),t._v(" "),a("p",[t._v("Redis: 采用定期删除+惰性删除策略.")]),t._v(" "),a("p",[t._v("定期删除: redis默认每100ms"),a("code",[t._v("随机抽取")]),t._v("检查, 有过期的key则删除.")]),t._v(" "),a("p",[t._v("惰性删除: ???")]),t._v(" "),a("p",[t._v("内存淘汰机制: 在redis.conf中有如下一行配置:")]),t._v(" "),a("blockquote",[a("p",[t._v("maxmemory-policy volatile-lru")])]),t._v(" "),a("p",[t._v("这是用于配置内存淘汰策略的:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("前提: 当内存不足以写入新数据时.\n\nnoeviction: 新写入操作会报错.\nallkeys-lru: 移除最近最少使用的key.\nallkeys-random:\nvolatile-lru:\nvolatile-random:\nvolatile-ttl:\n")])])]),a("h2",{attrs:{id:"单线程的redis为什么这么快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单线程的redis为什么这么快"}},[t._v("#")]),t._v(" 单线程的redis为什么这么快")]),t._v(" "),a("ol",[a("li",[t._v("纯内存操作")]),t._v(" "),a("li",[t._v("单线程操作, 避免了频繁的上下文切换")]),t._v(" "),a("li",[t._v("采用了非阻塞I/O多路复用机制")])]),t._v(" "),a("h2",{attrs:{id:"缓存穿透"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),a("blockquote",[a("p",[t._v("即大量请求缓存中不存在的数据, 导致所有的请求都落到了数据库上, 从而数据库连接异常.")])]),t._v(" "),a("p",[t._v("解决方案:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("互斥锁\n"),a("code",[t._v("请自己思考!")]),t._v("\n[^_^]:\n缓存失效时, 先去获得锁, 得到锁后再去请求数据库, 没得到锁则休眠一段时间重试.")])]),t._v(" "),a("li",[a("p",[t._v("异步更新策略\n"),a("code",[t._v("请自己思考!")]),t._v("\n[^_^]:\n无论key是否取到值, 都直接返回, value中维护一个缓存失效时间, 缓存如果过期, 异步起一个线程去读数据库, 更新缓存")])]),t._v(" "),a("li",[a("p",[t._v("提供拦截机制判断请求是否有效.\n"),a("code",[t._v("请自己思考!")]),t._v("\n[^_^]: 比如利用布隆过滤器, 内部维护一系列合法有效的key, 迅速判断请求的key是否合法有效, 不合法则直接返回.")])])]),t._v(" "),a("h2",{attrs:{id:"缓存雪崩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),a("blockquote",[a("p",[t._v("即同一时间缓存大面积失效, 导致大量请求都落到了数据库上, 从而数据库连接异常.")])]),t._v(" "),a("p",[t._v("解决方案:")]),t._v(" "),a("ol",[a("li",[t._v("让缓存避免同时失效")]),t._v(" "),a("li",[t._v("双缓存")])]),t._v(" "),a("p",[a("code",[t._v("具体解答请自己多思考")]),t._v("\n[^_^]:\n1. 给缓存失效时间, 加上一个随机值, 避免同时失效.\n2. 使用互斥锁(不推荐, 吞吐量明显下降)\n3. 双缓存. A(失效时间20分钟) B(不设失效时间). 从A中读, 没有则读B, 并异步启动一个更新线程, 同时更新A和B.")]),t._v(" "),a("h2",{attrs:{id:"如何解决redis并发竞争key的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何解决redis并发竞争key的问题"}},[t._v("#")]),t._v(" 如何解决redis并发竞争Key的问题")]),t._v(" "),a("blockquote",[a("p",[t._v("同时多个子系统去set一个key. 如果在非集群环境可以使用redis事务, 而集群环境下\n做了数据分片操作, 一个事务中涉及到多个key操作的时候, redis事务显然不行.")])]),t._v(" "),a("ol",[a("li",[t._v("如果对key的操作, 不要求顺序")])]),t._v(" "),a("p",[t._v("可以使用分布式锁, 抢到了锁就去做set.")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("如果对key的操作, 要求顺序")])]),t._v(" "),a("p",[t._v("设置时间戳解决或者利用队列将set方法变成串行访问.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("将value带上时间戳,\n有一个key, 系统A设置key为valueA, B设置key为valueB, C设置key为valueC.\n期望key的value值按照valueA>valueB>valueC.\n那么, B先抢到锁, 将key设置为valueB, 接下来A抢到了锁, 发现自己valueA的时间戳早于缓存中的时间戳, 就不操作set了, 以此类推.\n")])])]),a("h2",{attrs:{id:"redis还应该消灭什么-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis还应该消灭什么-todo"}},[t._v("#")]),t._v(" redis还应该消灭什么(TODO)")]),t._v(" "),a("h2",{attrs:{id:"redis复制原理和优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis复制原理和优化策略"}},[t._v("#")]),t._v(" redis复制原理和优化策略")]),t._v(" "),a("h2",{attrs:{id:"redis分布式解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis分布式解决方案"}},[t._v("#")]),t._v(" redis分布式解决方案")]),t._v(" "),a("h2",{attrs:{id:"redis和数据库双写一致性问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis和数据库双写一致性问题"}},[t._v("#")]),t._v(" redis和数据库双写一致性问题")]),t._v(" "),a("h2",{attrs:{id:"redis的慢查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis的慢查询"}},[t._v("#")]),t._v(" Redis的慢查询")]),t._v(" "),a("p",[t._v('由于redis被用来做高速缓存，因此对于其性能要求非常高，如果出现慢查询，对于"应用"中的使用可能是不可容忍的，同时慢查询的出现，也可能redis实例不稳定或宕机的预兆。')]),t._v(" "),a("p",[t._v("好在redis本身提供了慢查询功能，接下来介绍其如何使用。")]),t._v(" "),a("h3",{attrs:{id:"需要了解的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要了解的命令"}},[t._v("#")]),t._v(" 需要了解的命令")]),t._v(" "),a("ol",[a("li",[t._v("config")]),t._v(" "),a("li",[t._v("slowlog")])]),t._v(" "),a("h3",{attrs:{id:"config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" config")]),t._v(" "),a("p",[t._v("用于获取&设置redis的相关配置参数，用法如下：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://redis.io/commands/config-get",target:"_blank",rel:"noopener noreferrer"}},[t._v("CONFIG GET"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://redis.io/commands/config-resetstat",target:"_blank",rel:"noopener noreferrer"}},[t._v("CONFIG RESETSTAT"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://redis.io/commands/config-rewrite",target:"_blank",rel:"noopener noreferrer"}},[t._v("CONFIG REWRITE"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://redis.io/commands/config-set",target:"_blank",rel:"noopener noreferrer"}},[t._v("CONFIG SET"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("以上用法中get&set都很好理解，resetstat是指复位info的统计信息，rewrite是指将运行后set的配置持久化到redis.conf中。")]),t._v(" "),a("h3",{attrs:{id:"slowlog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slowlog"}},[t._v("#")]),t._v(" slowlog")]),t._v(" "),a("p",[t._v("此为redis提供的慢查询功能命令，下一节会做具体介绍。")]),t._v(" "),a("ul",[a("li",[t._v("slowlog get")]),t._v(" "),a("li",[t._v("slowlog len")]),t._v(" "),a("li",[t._v("slowlog reset")])]),t._v(" "),a("h3",{attrs:{id:"如何使用redis慢查询功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用redis慢查询功能"}},[t._v("#")]),t._v(" 如何使用redis慢查询功能")]),t._v(" "),a("p",[t._v("先使用"),a("code",[t._v("slowlog len")]),t._v("获取慢查询的长度，然后通过"),a("code",[t._v("slowlog get [序号]")]),t._v("获取对应慢查询日志，经过一次排查或诊断后，通常需要"),a("code",[t._v("slowlog reset")]),t._v("将其重置，以便下次排查。")]),t._v(" "),a("p",[t._v("慢查询日志格式说明：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('redis 127.0.0.1:6379> slowlog get 2\n    1) 1) (integer) 14             //slowlog 唯一标识\n       2) (integer) 1309448221     //unix 时间戳\n       3) (integer) 15             //命令执行的时间，单位：微秒\n       4) 1) "ping"                //具体执行的命令，最多记录128\n    2) 1) (integer) 13\n       2) (integer) 1309448128\n       3) (integer) 30\n       4) 1) "slowlog"\n          2) "get"\n          3) "100"\n')])])]),a("p",[t._v("通常还需要注意慢查询的参数配置，有两个相关参数：")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("slowlog-log-slower-than")])]),t._v(" "),a("li",[a("em",[t._v("slowlog-max-len")])])]),t._v(" "),a("p",[t._v("slowlog-log-slower-than指redis操作超过指定时间（微秒），便会记录在慢查询中。")]),t._v(" "),a("p",[t._v("slowlog-max-len指慢查询功能最大记录条数。")]),t._v(" "),a("h2",{attrs:{id:"redis面试问题汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis面试问题汇总"}},[t._v("#")]),t._v(" Redis面试问题汇总")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.redis.com.cn/redis-interview-questions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("redis面试题"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"redisson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redisson"}},[t._v("#")]),t._v(" Redisson")]),t._v(" "),a("h2",{attrs:{id:"redis问题汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis问题汇总"}},[t._v("#")]),t._v(" Redis问题汇总")]),t._v(" "),a("h3",{attrs:{id:"jedis、jedis的一个线上bug排查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis、jedis的一个线上bug排查"}},[t._v("#")]),t._v(" Jedis、jedis的一个线上bug排查")]),t._v(" "),a("p",[t._v("jedis是一个连接redis的java客户端，并且在使用上提供连接池以提高性能。")]),t._v(" "),a("p",[t._v("本文jedis版本为：2.9.1（此版本存在缺陷，请更新为最新版或2.9.3）")]),t._v(" "),a("h4",{attrs:{id:"应用出现假死"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用出现假死"}},[t._v("#")]),t._v(" 应用出现假死")]),t._v(" "),a("p",[t._v("应用中使用jedis来连接redis，当出现并发时，突然应用中大部分业务出现假死的情况，通过查看jstack，发现所有线程都是卡在从jedisPool获取jedis连接上，随即开始深度排查。")]),t._v(" "),a("h4",{attrs:{id:"检查jedispool获取连接代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查jedispool获取连接代码"}},[t._v("#")]),t._v(" 检查jedisPool获取连接代码")]),t._v(" "),a("p",[t._v("首先简单检查了一遍卡住的相关源码，发现代码没有逻辑问题，阻塞在这里只可能是连接池里确实没有连接能获取。")]),t._v(" "),a("h4",{attrs:{id:"猜想是否因为并发过高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#猜想是否因为并发过高"}},[t._v("#")]),t._v(" 猜想是否因为并发过高？")]),t._v(" "),a("p",[t._v("然后便猜想是不是因为并发过高，redis操作过慢，没有及时返还对应的连接导致大量获取连接的线程阻塞，但其实并没有问题，因为最近上线的版本确实会导致redis并发过高。（提出猜想时思考不是很缜密，因为从日志上）")]),t._v(" "),a("h4",{attrs:{id:"检查redis连接池配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查redis连接池配置"}},[t._v("#")]),t._v(" 检查redis连接池配置")]),t._v(" "),a("p",[t._v("检查配置文件的连接池，发现redis连接配置并未生效，应用中使用的仍是jedis默认配置，也就是8个连接数，此时先将配置问题进行修正，使其生效，发布上线。")]),t._v(" "),a("p",[t._v("但仔细想想仍然不对，就算是默认的8个连接数，应用运行几个月都没有出现过问题，为什么出现高并发场景就出事了？")]),t._v(" "),a("h4",{attrs:{id:"推翻猜想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推翻猜想"}},[t._v("#")]),t._v(" 推翻猜想")]),t._v(" "),a("p",[t._v("接着对应用并发情况进行评估，发现虽然间歇性会出现并发场景，但不可能会导致所有线程都卡住，而且从日志观察，应该没有线程能获取到jedis连接（由于还有业务没有用到redis，可以正常使用，因此单从量级很大的日志上分析筛选还不太肯定）。")]),t._v(" "),a("h4",{attrs:{id:"检查使用jedis后是否close"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查使用jedis后是否close"}},[t._v("#")]),t._v(" 检查使用jedis后是否close")]),t._v(" "),a("p",[t._v("如果通过jedis操作redis后，不进行close操作，那jedis连接不会返回到pool中，因此这种情况也可能会导致出现假死现象。")]),t._v(" "),a("h4",{attrs:{id:"大部分都是通过redistemplate操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大部分都是通过redistemplate操作"}},[t._v("#")]),t._v(" 大部分都是通过redisTemplate操作")]),t._v(" "),a("p",[t._v("通过检查项目代码，发现大部分都是通过redisTemplate来操作reids，因为Spring的Template会在执行操作之后执行close代码，因此不存在此类情况")]),t._v(" "),a("h4",{attrs:{id:"单独使用jedis的代码也都执行了close"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单独使用jedis的代码也都执行了close"}},[t._v("#")]),t._v(" 单独使用jedis的代码也都执行了close")]),t._v(" "),a("p",[t._v("仍有一小部分代码未使用redisTemplate，自己直接操作jedis，这类代码应该要在项目中避免，重复冗余的代码首先不利于维护，其次可能会在不经意间加入bug。")]),t._v(" "),a("h4",{attrs:{id:"改善了一部分不规范代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改善了一部分不规范代码"}},[t._v("#")]),t._v(" 改善了一部分不规范代码")]),t._v(" "),a("p",[t._v("检查期间对于一些不规范代码，做了记录，排查完问题后，都将其进行处理。")]),t._v(" "),a("h4",{attrs:{id:"推翻猜想-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推翻猜想-2"}},[t._v("#")]),t._v(" 推翻猜想")]),t._v(" "),a("p",[t._v("由于未检查到单独使用jedis并且未close的代码，此类情况也排除。")]),t._v(" "),a("h4",{attrs:{id:"测试重现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试重现"}},[t._v("#")]),t._v(" 测试重现")]),t._v(" "),a("p",[t._v("单纯通过猜想去排查，容易大海捞针，其次由于问题发生在线上，不太好观察具体情况，因此写了测试代码对其进行重现")]),t._v(" "),a("h4",{attrs:{id:"并发情况下容易重现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并发情况下容易重现"}},[t._v("#")]),t._v(" 并发情况下容易重现")]),t._v(" "),a("p",[t._v("在提高并发量的情况下，问题更容易重现。")]),t._v(" "),a("h4",{attrs:{id:"apache-commons-pool2是否存在使用缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-commons-pool2是否存在使用缺陷"}},[t._v("#")]),t._v(" apache commons pool2是否存在使用缺陷？")]),t._v(" "),a("p",[t._v("jedis使用apache commons pool2管理其连接池，那jedis对于commons pool是否存在使用缺陷呢？")]),t._v(" "),a("h4",{attrs:{id:"检查对commons-pool代码的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查对commons-pool代码的使用"}},[t._v("#")]),t._v(" 检查对commons pool代码的使用")]),t._v(" "),a("p",[t._v("并未发现突出问题。")]),t._v(" "),a("p",[t._v("在此过程中发现commons pool之前是存在无法获取到pool中存放的对象的问题，但随后版本修复此问题，jedis中使用的版本也是最新release。")]),t._v(" "),a("h4",{attrs:{id:"简单测试了commons-pool2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单测试了commons-pool2"}},[t._v("#")]),t._v(" 简单测试了commons pool2")]),t._v(" "),a("p",[t._v("测试其功能在并发下并无问题。")]),t._v(" "),a("h4",{attrs:{id:"jedis本身会否存在缺陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis本身会否存在缺陷"}},[t._v("#")]),t._v(" jedis本身会否存在缺陷？")]),t._v(" "),a("p",[t._v("由于前面浏览过commons pool2的历史缺陷，因此也找到jedis的开源地（GitHub），发现最新版本已经更新为3.x，与应用使用的版本2.x差了一个大版本，在上面仔细对比与当前应用版本2.9.1，发现在其后仍然发布了多个版本，并且都是注明fix bug！看来这里终于发现了希望。")]),t._v(" "),a("h4",{attrs:{id:"检查jedis前进的多个版本修复内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查jedis前进的多个版本修复内容"}},[t._v("#")]),t._v(" 检查jedis前进的多个版本修复内容")]),t._v(" "),a("p",[t._v("通过对其多个修复内容的了解，发现"),a("strong",[t._v("此问题确实是由于并发下jedis的一个bug")]),t._v("，并且"),a("strong",[t._v("已经修复")]),t._v("。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/xetorthio/jedis/issues/1920",target:"_blank",rel:"noopener noreferrer"}},[t._v("跳转到对应issue"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"修复上线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复上线"}},[t._v("#")]),t._v(" 修复上线")]),t._v(" "),a("p",[t._v("既然找到问题所在，便调整应用jedis版本，通过一轮测试，修复上线~")]),t._v(" "),a("h3",{attrs:{id:"attempt-to-unlock-lock-not-locked-by-current-thread-by-node-id的意思是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attempt-to-unlock-lock-not-locked-by-current-thread-by-node-id的意思是"}},[t._v("#")]),t._v(" attempt to unlock lock, not locked by current thread by node id的意思是?")]),t._v(" "),a("blockquote",[a("p",[t._v("英语还不差的同学, 根据提示语应该也看懂了, 这表示"),a("strong",[t._v("尝试去解锁, 但发现不是被当前线程锁住")])])]),t._v(" "),a("h4",{attrs:{id:"场景重现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景重现"}},[t._v("#")]),t._v(" 场景重现")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch")]),t._v(" countDownLatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RLock")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redissonClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFairLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOCK_KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock 1 want lock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把持锁10s后就会释放")]),t._v("\n        lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock 1..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    countDownLatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保证一般情况下先执行上面的线程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MILLISECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RLock")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redissonClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFairLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOCK_KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock 2 want lock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把持锁10s后就会释放")]),t._v("\n        lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lock 2..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    countDownLatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("countDown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncountDownLatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"时间线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间线"}},[t._v("#")]),t._v(" 时间线")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("thread 1")]),t._v(" "),a("th",[t._v("thread 2")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("T1")]),t._v(" "),a("td",[t._v("拿到lock(leaseTime=10s), 开始sleep(15s)")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("T2")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("阻塞等待lock释放")])]),t._v(" "),a("tr",[a("td",[t._v("T3")]),t._v(" "),a("td",[t._v("10s过后, 释放lock")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("T4")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("拿到lock(leaseTime=10s), 开始sleep(10s)")])]),t._v(" "),a("tr",[a("td",[t._v("T5")]),t._v(" "),a("td",[t._v("sleep结束, "),a("strong",[t._v("执行unlock, 抛出异常")])]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("T6")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("sleep结束, 执行unlock, 正常结束")])])])]),t._v(" "),a("h4",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),a("blockquote",[a("p",[t._v("出现异常的问题在于"),a("code",[t._v("T3")]),t._v("时刻, "),a("strong",[t._v("逻辑执行时间超过了加锁时间")]),t._v(", 导致锁被超时释放, 此时同时有其他线程执行同一块代码或者如上面场景, 都会出现此异常.")])]),t._v(" "),a("h4",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("blockquote",[a("p",[t._v("解决这个问题, 只需要在解锁时判断当前锁是否由当前线程持有就ok了.\n但"),a("strong",[t._v("锁超时释放本身就是一个问题")]),t._v(", 不能单纯使用这个方法来解决,\n首先你得考虑:")]),t._v(" "),a("ol",[a("li",[t._v("逻辑是否允许另一条线程进入"),a("code",[t._v("锁定范围")]),t._v("? 不允许就需要考虑加长锁超时时间, 并缩短锁定逻辑处理时间")]),t._v(" "),a("li",[t._v("锁超时时间是否需要再从长计议")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断当前锁是否由当前线程持有")]),t._v("\nlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldByCurrentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//有些时候如果出现当前锁不被当前线程持有需要抛异常来做回滚等操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isHeldByCurrentThread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//throw new ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);