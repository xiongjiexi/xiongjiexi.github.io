(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{571:function(t,v,_){"use strict";_.r(v);var a=_(42),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"java的修饰符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#java的修饰符"}},[t._v("#")]),t._v(" Java的修饰符")]),t._v(" "),_("p",[t._v("Java大家常说的有4种修饰符，但实际上应该说是4种修饰方式，3种修饰符，即：private,protected,public。还有一种情况是不加修饰符，也就是常说的default（并不是要加default修饰，只是指默认不加修饰符的情况）。")]),t._v(" "),_("p",[t._v("修饰符可以加在类上，也可以加在变量上，可用于控制访问，也可用于控制继承，接下来就介绍下访问和继承，特别是继承，是大家容易迷糊的。")]),t._v(" "),_("h3",{attrs:{id:"修饰符的访问控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修饰符的访问控制"}},[t._v("#")]),t._v(" 修饰符的访问控制")]),t._v(" "),_("p",[t._v("一个表格说清楚（网上到处都是）。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("访问修饰符\\作用范围")]),t._v(" "),_("th",[t._v("所在类")]),t._v(" "),_("th",[t._v("同一包内其他类")]),t._v(" "),_("th",[t._v("其他包内子类")]),t._v(" "),_("th",[t._v("其他包内非子类")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("private")]),t._v(" "),_("td",[t._v("可以访问")]),t._v(" "),_("td",[t._v("不可以")]),t._v(" "),_("td",[t._v("不可以")]),t._v(" "),_("td",[t._v("不可以")])]),t._v(" "),_("tr",[_("td",[t._v("缺省")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("不可以")]),t._v(" "),_("td",[t._v("不可以")])]),t._v(" "),_("tr",[_("td",[t._v("protected")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("不可以")])]),t._v(" "),_("tr",[_("td",[t._v("public")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")]),t._v(" "),_("td",[t._v("可以")])])])]),t._v(" "),_("h3",{attrs:{id:"修饰符的继承控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修饰符的继承控制"}},[t._v("#")]),t._v(" 修饰符的继承控制")]),t._v(" "),_("h5",{attrs:{id:"父类可见的方法-子类重写后-修饰符的访问控制必须大于等于父类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#父类可见的方法-子类重写后-修饰符的访问控制必须大于等于父类"}},[t._v("#")]),t._v(" 父类可见的方法，子类重写后，修饰符的访问控制必须大于等于父类")]),t._v(" "),_("ol",[_("li",[t._v("父类中的public方法，子类中也必须为public")]),t._v(" "),_("li",[t._v("父类中的protected方法，子类中也必须是protected或public")]),t._v(" "),_("li",[t._v("父类中的缺省修饰符方法，子类也必须也是缺省的或protected或public")])]),t._v(" "),_("h5",{attrs:{id:"父类中的私有方法-对子类是不可见的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#父类中的私有方法-对子类是不可见的"}},[t._v("#")]),t._v(" 父类中的私有方法，对子类是不可见的")]),t._v(" "),_("p",[t._v("因此子类写与父类相同的方法，都不构成重写，此时方法只属于子类自己。")]),t._v(" "),_("h5",{attrs:{id:"子类出现与父类同名的变量-两个变量不会覆盖-会同时存在"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#子类出现与父类同名的变量-两个变量不会覆盖-会同时存在"}},[t._v("#")]),t._v(" 子类出现与父类同名的变量，两个变量不会覆盖，会同时存在")]),t._v(" "),_("p",[t._v("出现同名变量，默认使用子类的，要使用父类变量必须用super指定。")])])}),[],!1,null,null,null);v.default=r.exports}}]);