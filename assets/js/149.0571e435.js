(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{552:function(t,a,r){"use strict";r.r(a);var e=r(42),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"guava"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#guava"}},[t._v("#")]),t._v(" Guava")]),t._v(" "),r("h3",{attrs:{id:"maps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#maps"}},[t._v("#")]),t._v(" Maps")]),t._v(" "),r("p",[t._v("uniqueIndex")]),t._v(" "),r("blockquote",[r("p",[t._v("List中1:1时, 可以使用此方法转换, 但生产的Map是ImmutableMap, 不可更改里面的值, 否则会抛出异常: java.lang.UnsupportedOperationException.\nMap<String, Fruit> map = Maps.uniqueIndex(fruitList, Fruit::getName);")])]),t._v(" "),r("h3",{attrs:{id:"arraylistmultimap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#arraylistmultimap"}},[t._v("#")]),t._v(" ArrayListMultimap")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("Multimap<String, Integer> multiMap = ArrayListMultimap.create();\nfruitList.forEach(fruit -> multiMap.put(fruit.getName(), fruit.getPrice()));\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);