(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{645:function(i,n,t){"use strict";t.r(n);var e=t(42),l=Object(e.a)({},(function(){var i=this,n=i.$createElement,t=i._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("h1",{attrs:{id:"使用cpulimit防止过载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用cpulimit防止过载"}},[i._v("#")]),i._v(" 使用cpulimit防止过载")]),i._v(" "),t("p",[i._v("老司机教你用 cpulimit 防止 CPU 过载而翻车\n前言\n开车了 ，开车了 ，论如何使用 cpulimit 防止老司机在 ECS 上翻车。\n很多朋友如果只是购买的单核心实例，如果跑的 MYSQL 过载了或者遭遇一些逻辑缺陷的软件造成 CPU 过载和服务器假死，导致网站打不开或者 502 错误啥\n的。所以我们可以借助一些软件来限制 CPU 的使用率和 IO。 还有千万不要用跑分软件跑分，不然准翻车。\n安装\ncpulimit 就是一款可以对 CPU 使用率进行控制的软件。\n包安装\nCentos：\n复制代码")]),i._v(" "),t("ol",[t("li",[i._v("yum install cpulimit\nDebian/Ubuntu\n复制代码")]),i._v(" "),t("li",[i._v("apt-get install cpulimit\n编译安装\n复制代码")]),i._v(" "),t("li",[i._v("cd /tmp\nwget 'http://downloads.sourceforge.net/cpulimit/cpulimit-1.1.tar.gz'\ntar cpulimit-1.1.tar.gz\ncd cpulimit-1.1\nmake\ncp cpulimit /usr/local/sbin/\nrm -rf cpulimit*\n使用\n说明\n复制代码")]),i._v(" "),t("li",[i._v("cpulimit -h\nUsage: cpulimit [OPTIONS...] TARGET\nOPTIONS\n-l, --limit=N percentage of cpu allowed from 0 to 100 (required)//cpu限制的百分比\n-v, --verbose show control statistics//显示版本号\n-z, --lazy exit if there is no target process, or if it dies//如果限制的进程不存在了，则退出。\n-i, --include-children limit also the children processes//包括子进程。\n-h, --help display this help and exit //帮助，显示参数\nTARGET must be exactly one of these:\n-p, --pid=N pid of the process (implies -z) //进程的pid\n-e, --exe=FILE name of the executable program file or path name //可执行程序\nCOMMAND [ARGS] run this command and limit it (implies -z)\n2018/9/24 老司机教你用 cpulimit 防止 CPU 过载而翻车 - 阿里云\nhttps://bbs.aliyun.com/simple/t301215.html 2/3\n用法\n限制firefox使用30% cpu 利用率\n复制代码")]),i._v(" "),t("li",[i._v("cpulimit -e firefox -l 30\n限制进程号1313的程序使用30% cpu 利用率\n复制代码")]),i._v(" "),t("li",[i._v("cpulimit -p 1313 -l 30\n限制绝对路径下该软件的 cpu 利用率\n复制代码")]),i._v(" "),t("li",[i._v("[b][/b]\ncpulimit -e /usr/local/nginx/sbin/nginx -l 50\n注意事项")]),i._v(" "),t("li",[i._v("-l后面限制的cpu使用量，要根据实际的核心数量而成倍减少。40%的限制生效在1核服务器中，如果是双核服务器，则应该限制到20%，四核服务器\n限制到10%以此类推。")]),i._v(" "),t("li",[i._v("root用户可以限制所有的进程，普通用户只能限制自己有权限管理的进程。\n限制所有进程的 CPU 使用率\n默认情况下 cpulimit 只能对已经存在的进程进行限制，但是设置此脚本为随机自启动即可(设置方法参看上面的脚本链接中)，它会对所有进程（包括新建进程）\n进行监控并限制（3秒检测一次，CPU限制为75％）\n这就可以防止因为 CPU 使用率过高而被 suspend 了！\n复制代码")]),i._v(" "),t("li",[i._v("#!/bin/bash\nwhile true ; do\nid="),t("code",[i._v("ps -ef | grep cpulimit | grep -v \"grep\" | awk '{print $10}' | tail -1")]),i._v("\nnid="),t("code",[i._v("ps aux | awk '{ if ( $3 > 75 ) print $2 }' | head -1")]),i._v('\nif [ "${nid}" != "" ] && [ "${nid}" != "${id}" ] ; then\ncpulimit -p ${nid} -l 75 &\necho "['),t("code",[i._v("date")]),i._v("] CpuLimiter run for ${nid} "),t("code",[i._v("ps -ef | grep ${nid} | awk '{print $8}' | head -1")]),i._v('" >> /root/cpulimit-log.log\nfi\nsleep 3\ndone\n保存到 /root/cpulimit.sh，会自动生成日志文件 /root/cpulimit-log.log\n然后将此降本添加开机启动。\n设置为开机启动\n修改 /etc/rc.local 在对应位置加入 /root/cpulimit.sh 再重启系统，就会全程限制各个进程的 CPU 使用了！')])])])}),[],!1,null,null,null);n.default=l.exports}}]);