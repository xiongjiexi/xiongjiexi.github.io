(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{538:function(t,a,e){"use strict";e.r(a);var s=e(42),l=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),e("p",[t._v("要终结所有设计模式~")]),t._v(" "),e("h2",{attrs:{id:"责任链模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#责任链模式"}},[t._v("#")]),t._v(" 责任链模式")]),t._v(" "),e("h4",{attrs:{id:"责任链模式必须的要素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#责任链模式必须的要素"}},[t._v("#")]),t._v(" 责任链模式必须的要素")]),t._v(" "),e("ol",[e("li",[t._v("抽象类")])]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("其中要定义一个self域, 用于设置责任链中下一个对象.")]),t._v(" "),e("li",[t._v("定义一个abstract handle(), 交予继承类去实现自己的handle方式, 要在指定逻辑处调用next()来执行到下一个责任链对象中去.")]),t._v(" "),e("li",[t._v("定义一个next(), 用于执行self域的handle().")])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("继承抽象类的类")])]),t._v(" "),e("blockquote",[e("p",[t._v("实现抽象类中的handle()")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("设置类(启动类)")])]),t._v(" "),e("blockquote",[e("p",[t._v("设置责任链执行的顺序.")])])])}),[],!1,null,null,null);a.default=l.exports}}]);